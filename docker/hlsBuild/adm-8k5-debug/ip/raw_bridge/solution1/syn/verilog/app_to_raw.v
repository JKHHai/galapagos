// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module app_to_raw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        from_app_V_dout,
        from_app_V_empty_n,
        from_app_V_read,
        to_raw_V_din,
        to_raw_V_full_n,
        to_raw_V_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [88:0] from_app_V_dout;
input   from_app_V_empty_n;
output   from_app_V_read;
output  [72:0] to_raw_V_din;
input   to_raw_V_full_n;
output   to_raw_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg from_app_V_read;
reg[72:0] to_raw_V_din;
reg to_raw_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [2:0] state_V_load_load_fu_119_p1;
wire   [0:0] grp_nbreadreq_fu_68_p3;
reg    ap_predicate_op7_read_state1;
reg    ap_predicate_op19_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [2:0] state_V_load_reg_227;
reg   [0:0] tmp_3_reg_236;
reg    ap_predicate_op35_write_state2;
reg   [0:0] tmp_reg_255;
reg    ap_predicate_op45_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [2:0] state_V;
reg   [0:0] app_packet_in_last_V;
reg   [63:0] app_packet_in_data_V;
reg   [7:0] app_packet_in_keep_V;
reg    from_app_V_blk_n;
wire    ap_block_pp0_stage0;
reg    to_raw_V_blk_n;
reg   [0:0] tmp_last_V_reg_231;
wire   [63:0] tmp_data_V_1_fu_127_p1;
reg   [63:0] tmp_data_V_1_reg_240;
wire   [0:0] grp_fu_89_p3;
reg   [0:0] tmp_last_V_1_reg_245;
reg   [7:0] tmp_tkeep_V_1_reg_250;
reg   [7:0] tmp_dest_V_load_new_reg_259;
reg    ap_block_pp0_stage0_subdone;
wire   [72:0] tmp_413_fu_191_p4;
reg    ap_block_pp0_stage0_01001;
wire   [72:0] tmp_2_fu_207_p4;
wire   [72:0] tmp_1_fu_217_p4;
wire   [2:0] storemerge_fu_137_p3;
wire   [2:0] storemerge1_fu_151_p3;
wire   [63:0] tmp_5_fu_165_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_94;
reg    ap_condition_154;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 state_V = 3'd2;
#0 app_packet_in_last_V = 1'd0;
#0 app_packet_in_data_V = 64'd0;
#0 app_packet_in_keep_V = 8'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_94)) begin
        if ((ap_predicate_op19_read_state1 == 1'b1)) begin
            app_packet_in_data_V <= tmp_5_fu_165_p1;
        end else if ((ap_predicate_op7_read_state1 == 1'b1)) begin
            app_packet_in_data_V <= tmp_data_V_1_fu_127_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_94)) begin
        if ((ap_predicate_op19_read_state1 == 1'b1)) begin
            state_V <= 3'd3;
        end else if ((state_V_load_load_fu_119_p1 == 3'd3)) begin
            state_V <= storemerge1_fu_151_p3;
        end else if ((ap_predicate_op7_read_state1 == 1'b1)) begin
            state_V <= storemerge_fu_137_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op19_read_state1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1)))) begin
        app_packet_in_keep_V <= {{from_app_V_dout[88:81]}};
        app_packet_in_last_V <= from_app_V_dout[32'd72];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        state_V_load_reg_227 <= state_V;
        tmp_last_V_reg_231 <= app_packet_in_last_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state_V == 3'd4) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_3_reg_236 <= from_app_V_empty_n;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1))) begin
        tmp_data_V_1_reg_240 <= tmp_data_V_1_fu_127_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op19_read_state1 == 1'b1))) begin
        tmp_dest_V_load_new_reg_259 <= {{from_app_V_dout[71:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1))) begin
        tmp_last_V_1_reg_245 <= from_app_V_dout[32'd72];
        tmp_tkeep_V_1_reg_250 <= {{from_app_V_dout[88:81]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (state_V == 3'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_255 <= from_app_V_empty_n;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op19_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        from_app_V_blk_n = from_app_V_empty_n;
    end else begin
        from_app_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op19_read_state1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1)))) begin
        from_app_V_read = 1'b1;
    end else begin
        from_app_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op45_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((state_V_load_reg_227 == 3'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op35_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        to_raw_V_blk_n = to_raw_V_full_n;
    end else begin
        to_raw_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_154)) begin
        if ((ap_predicate_op45_write_state2 == 1'b1)) begin
            to_raw_V_din = tmp_1_fu_217_p4;
        end else if ((state_V_load_reg_227 == 3'd3)) begin
            to_raw_V_din = tmp_2_fu_207_p4;
        end else if ((ap_predicate_op35_write_state2 == 1'b1)) begin
            to_raw_V_din = tmp_413_fu_191_p4;
        end else begin
            to_raw_V_din = 'bx;
        end
    end else begin
        to_raw_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op45_write_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (state_V_load_reg_227 == 3'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op35_write_state2 == 1'b1)))) begin
        to_raw_V_write = 1'b1;
    end else begin
        to_raw_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((to_raw_V_full_n == 1'b0) & (ap_predicate_op45_write_state2 == 1'b1)) | ((state_V_load_reg_227 == 3'd3) & (to_raw_V_full_n == 1'b0)) | ((to_raw_V_full_n == 1'b0) & (ap_predicate_op35_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((from_app_V_empty_n == 1'b0) & (ap_predicate_op19_read_state1 == 1'b1)) | ((from_app_V_empty_n == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((to_raw_V_full_n == 1'b0) & (ap_predicate_op45_write_state2 == 1'b1)) | ((state_V_load_reg_227 == 3'd3) & (to_raw_V_full_n == 1'b0)) | ((to_raw_V_full_n == 1'b0) & (ap_predicate_op35_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((from_app_V_empty_n == 1'b0) & (ap_predicate_op19_read_state1 == 1'b1)) | ((from_app_V_empty_n == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((to_raw_V_full_n == 1'b0) & (ap_predicate_op45_write_state2 == 1'b1)) | ((state_V_load_reg_227 == 3'd3) & (to_raw_V_full_n == 1'b0)) | ((to_raw_V_full_n == 1'b0) & (ap_predicate_op35_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((from_app_V_empty_n == 1'b0) & (ap_predicate_op19_read_state1 == 1'b1)) | ((from_app_V_empty_n == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((from_app_V_empty_n == 1'b0) & (ap_predicate_op19_read_state1 == 1'b1)) | ((from_app_V_empty_n == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((to_raw_V_full_n == 1'b0) & (ap_predicate_op45_write_state2 == 1'b1)) | ((state_V_load_reg_227 == 3'd3) & (to_raw_V_full_n == 1'b0)) | ((to_raw_V_full_n == 1'b0) & (ap_predicate_op35_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_condition_154 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001));
end

always @ (*) begin
    ap_condition_94 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op19_read_state1 = ((grp_nbreadreq_fu_68_p3 == 1'd1) & (state_V == 3'd2));
end

always @ (*) begin
    ap_predicate_op35_write_state2 = ((tmp_3_reg_236 == 1'd1) & (state_V_load_reg_227 == 3'd4));
end

always @ (*) begin
    ap_predicate_op45_write_state2 = ((state_V_load_reg_227 == 3'd2) & (tmp_reg_255 == 1'd1));
end

always @ (*) begin
    ap_predicate_op7_read_state1 = ((grp_nbreadreq_fu_68_p3 == 1'd1) & (state_V == 3'd4));
end

assign grp_fu_89_p3 = from_app_V_dout[32'd72];

assign grp_nbreadreq_fu_68_p3 = from_app_V_empty_n;

assign state_V_load_load_fu_119_p1 = state_V;

assign storemerge1_fu_151_p3 = ((app_packet_in_last_V[0:0] === 1'b1) ? 3'd2 : 3'd4);

assign storemerge_fu_137_p3 = ((grp_fu_89_p3[0:0] === 1'b1) ? 3'd2 : 3'd4);

assign tmp_1_fu_217_p4 = {{{{17'd130560}, {tmp_dest_V_load_new_reg_259}}}, {48'd0}};

assign tmp_2_fu_207_p4 = {{{app_packet_in_keep_V}, {tmp_last_V_reg_231}}, {app_packet_in_data_V}};

assign tmp_413_fu_191_p4 = {{{tmp_tkeep_V_1_reg_250}, {tmp_last_V_1_reg_245}}, {tmp_data_V_1_reg_240}};

assign tmp_5_fu_165_p1 = from_app_V_dout[63:0];

assign tmp_data_V_1_fu_127_p1 = from_app_V_dout[63:0];

endmodule //app_to_raw
