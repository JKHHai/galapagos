// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _raw_bridge_HH_
#define _raw_bridge_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "raw_to_app.h"
#include "app_to_raw.h"

namespace ap_rtl {

struct raw_bridge : public sc_module {
    // Port declarations 14
    sc_out< sc_lv<89> > to_app_V_din;
    sc_in< sc_logic > to_app_V_full_n;
    sc_out< sc_logic > to_app_V_write;
    sc_in< sc_lv<73> > from_raw_V_dout;
    sc_in< sc_logic > from_raw_V_empty_n;
    sc_out< sc_logic > from_raw_V_read;
    sc_in< sc_lv<89> > from_app_V_dout;
    sc_in< sc_logic > from_app_V_empty_n;
    sc_out< sc_logic > from_app_V_read;
    sc_out< sc_lv<73> > to_raw_V_din;
    sc_in< sc_logic > to_raw_V_full_n;
    sc_out< sc_logic > to_raw_V_write;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;


    // Module declarations
    raw_bridge(sc_module_name name);
    SC_HAS_PROCESS(raw_bridge);

    ~raw_bridge();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    raw_to_app* raw_to_app_U0;
    app_to_raw* app_to_raw_U0;
    sc_signal< sc_logic > raw_to_app_U0_ap_start;
    sc_signal< sc_logic > raw_to_app_U0_ap_done;
    sc_signal< sc_logic > raw_to_app_U0_ap_continue;
    sc_signal< sc_logic > raw_to_app_U0_ap_idle;
    sc_signal< sc_logic > raw_to_app_U0_ap_ready;
    sc_signal< sc_logic > raw_to_app_U0_from_raw_V_read;
    sc_signal< sc_lv<89> > raw_to_app_U0_to_app_V_din;
    sc_signal< sc_logic > raw_to_app_U0_to_app_V_write;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > app_to_raw_U0_ap_start;
    sc_signal< sc_logic > app_to_raw_U0_ap_done;
    sc_signal< sc_logic > app_to_raw_U0_ap_continue;
    sc_signal< sc_logic > app_to_raw_U0_ap_idle;
    sc_signal< sc_logic > app_to_raw_U0_ap_ready;
    sc_signal< sc_logic > app_to_raw_U0_from_app_V_read;
    sc_signal< sc_lv<73> > app_to_raw_U0_to_raw_V_din;
    sc_signal< sc_logic > app_to_raw_U0_to_raw_V_write;
    sc_signal< sc_logic > raw_to_app_U0_start_full_n;
    sc_signal< sc_logic > raw_to_app_U0_start_write;
    sc_signal< sc_logic > app_to_raw_U0_start_full_n;
    sc_signal< sc_logic > app_to_raw_U0_start_write;
    static const sc_lv<89> ap_const_lv89_0;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<73> ap_const_lv73_0;
    static const sc_logic ap_const_logic_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_sync_continue();
    void thread_app_to_raw_U0_ap_continue();
    void thread_app_to_raw_U0_start_full_n();
    void thread_app_to_raw_U0_start_write();
    void thread_from_app_V_read();
    void thread_from_raw_V_read();
    void thread_raw_to_app_U0_ap_continue();
    void thread_raw_to_app_U0_start_full_n();
    void thread_raw_to_app_U0_start_write();
    void thread_to_app_V_din();
    void thread_to_app_V_write();
    void thread_to_raw_V_din();
    void thread_to_raw_V_write();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
