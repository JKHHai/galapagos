// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module linear_2 (
        ap_ready,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        data_4_V_read,
        data_5_V_read,
        data_6_V_read,
        data_7_V_read,
        data_8_V_read,
        data_9_V_read,
        data_10_V_read,
        data_11_V_read,
        data_12_V_read,
        data_13_V_read,
        data_14_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14
);


output   ap_ready;
input  [31:0] data_0_V_read;
input  [31:0] data_1_V_read;
input  [31:0] data_2_V_read;
input  [31:0] data_3_V_read;
input  [31:0] data_4_V_read;
input  [31:0] data_5_V_read;
input  [31:0] data_6_V_read;
input  [31:0] data_7_V_read;
input  [31:0] data_8_V_read;
input  [31:0] data_9_V_read;
input  [31:0] data_10_V_read;
input  [31:0] data_11_V_read;
input  [31:0] data_12_V_read;
input  [31:0] data_13_V_read;
input  [31:0] data_14_V_read;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] ap_return_8;
output  [31:0] ap_return_9;
output  [31:0] ap_return_10;
output  [31:0] ap_return_11;
output  [31:0] ap_return_12;
output  [31:0] ap_return_13;
output  [31:0] ap_return_14;

assign ap_ready = 1'b1;

assign ap_return_0 = data_0_V_read;

assign ap_return_1 = data_1_V_read;

assign ap_return_10 = data_10_V_read;

assign ap_return_11 = data_11_V_read;

assign ap_return_12 = data_12_V_read;

assign ap_return_13 = data_13_V_read;

assign ap_return_14 = data_14_V_read;

assign ap_return_2 = data_2_V_read;

assign ap_return_3 = data_3_V_read;

assign ap_return_4 = data_4_V_read;

assign ap_return_5 = data_5_V_read;

assign ap_return_6 = data_6_V_read;

assign ap_return_7 = data_7_V_read;

assign ap_return_8 = data_8_V_read;

assign ap_return_9 = data_9_V_read;

endmodule //linear_2
