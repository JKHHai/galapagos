-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_layer_0_0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (28 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of compute_layer_0_0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv38_17 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000010111";
    constant ap_const_lv40_46 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000001000110";
    constant ap_const_lv39_27 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000100111";
    constant ap_const_lv46_2F73 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000010111101110011";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv38_0 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv21_1F1C57 : STD_LOGIC_VECTOR (20 downto 0) := "111110001110001010111";

    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_256_reg_384 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_256_reg_384_pp0_iter1_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_256_reg_384_pp0_iter2_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_253_reg_394 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_253_reg_394_pp0_iter3_reg : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_254_reg_399 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_255_reg_404 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_257_reg_409 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp2_fu_326_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp2_reg_414 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp3_fu_342_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp3_reg_419 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_103_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fu_104_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_105_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_106_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal OP1_V_3_cast5_fu_231_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl_fu_235_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl_fu_235_p3 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl_cast_fu_243_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal p_neg_fu_247_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal OP1_V_3_cast5_fu_231_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal p_Val2_2_fu_253_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal grp_fu_106_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_104_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_105_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal grp_fu_103_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp_6_cast_fu_314_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_9_cast_fu_317_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_15_cast_fu_323_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp4_fu_332_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp4_cast_fu_338_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_12_cast_fu_320_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp2_cast_fu_351_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_3_cast_fu_348_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp3_cast_fu_360_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp1_fu_354_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_103_ce : STD_LOGIC;
    signal grp_fu_104_ce : STD_LOGIC;
    signal grp_fu_105_ce : STD_LOGIC;
    signal grp_fu_106_ce : STD_LOGIC;
    signal res_V_write_assign_fu_363_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal data_0_V_read_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_1_V_read_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_2_V_read_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_3_V_read_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_4_V_read_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (28 downto 0);

    component hls4ml_hcal_mul_3Zio IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (37 downto 0) );
    end component;


    component hls4ml_hcal_mul_3VhK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component hls4ml_hcal_mul_3UhA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component hls4ml_hcal_mul_3Yie IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;



begin
    hls4ml_hcal_mul_3Zio_U348 : component hls4ml_hcal_mul_3Zio
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 6,
        dout_WIDTH => 38)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_4_V_read_int_reg,
        din1 => grp_fu_103_p1,
        ce => grp_fu_103_ce,
        dout => grp_fu_103_p2);

    hls4ml_hcal_mul_3VhK_U349 : component hls4ml_hcal_mul_3VhK
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 8,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_1_V_read_int_reg,
        din1 => grp_fu_104_p1,
        ce => grp_fu_104_ce,
        dout => grp_fu_104_p2);

    hls4ml_hcal_mul_3UhA_U350 : component hls4ml_hcal_mul_3UhA
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_2_V_read_int_reg,
        din1 => grp_fu_105_p1,
        ce => grp_fu_105_ce,
        dout => grp_fu_105_p2);

    hls4ml_hcal_mul_3Yie_U351 : component hls4ml_hcal_mul_3Yie
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => data_0_V_read_int_reg,
        din1 => grp_fu_106_p1,
        ce => grp_fu_106_ce,
        dout => grp_fu_106_p2);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= res_V_write_assign_fu_363_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                data_0_V_read_int_reg <= data_0_V_read;
                data_1_V_read_int_reg <= data_1_V_read;
                data_2_V_read_int_reg <= data_2_V_read;
                data_3_V_read_int_reg <= data_3_V_read;
                data_4_V_read_int_reg <= data_4_V_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                tmp2_reg_414 <= tmp2_fu_326_p2;
                tmp3_reg_419 <= tmp3_fu_342_p2;
                tmp_253_reg_394 <= grp_fu_106_p2(45 downto 18);
                tmp_253_reg_394_pp0_iter3_reg <= tmp_253_reg_394;
                tmp_254_reg_399 <= grp_fu_104_p2(39 downto 18);
                tmp_255_reg_404 <= grp_fu_105_p2(38 downto 18);
                tmp_256_reg_384 <= p_Val2_2_fu_253_p2(37 downto 18);
                tmp_256_reg_384_pp0_iter1_reg <= tmp_256_reg_384;
                tmp_256_reg_384_pp0_iter2_reg <= tmp_256_reg_384_pp0_iter1_reg;
                tmp_257_reg_409 <= grp_fu_103_p2(37 downto 18);
            end if;
        end if;
    end process;
    OP1_V_3_cast5_fu_231_p0 <= data_3_V_read_int_reg;
        OP1_V_3_cast5_fu_231_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(OP1_V_3_cast5_fu_231_p0),38));

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(res_V_write_assign_fu_363_p2, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= res_V_write_assign_fu_363_p2;
        end if; 
    end process;


    grp_fu_103_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_103_ce <= ap_const_logic_1;
        else 
            grp_fu_103_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_103_p1 <= ap_const_lv38_17(6 - 1 downto 0);

    grp_fu_104_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_104_ce <= ap_const_logic_1;
        else 
            grp_fu_104_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_104_p1 <= ap_const_lv40_46(8 - 1 downto 0);

    grp_fu_105_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_105_ce <= ap_const_logic_1;
        else 
            grp_fu_105_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_105_p1 <= ap_const_lv39_27(7 - 1 downto 0);

    grp_fu_106_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_106_ce <= ap_const_logic_1;
        else 
            grp_fu_106_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_106_p1 <= ap_const_lv46_2F73(15 - 1 downto 0);
    p_Val2_2_fu_253_p2 <= std_logic_vector(unsigned(p_neg_fu_247_p2) - unsigned(OP1_V_3_cast5_fu_231_p1));
    p_neg_fu_247_p2 <= std_logic_vector(unsigned(ap_const_lv38_0) - unsigned(p_shl_cast_fu_243_p1));
        p_shl_cast_fu_243_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl_fu_235_p3),38));

    p_shl_fu_235_p1 <= data_3_V_read_int_reg;
    p_shl_fu_235_p3 <= (p_shl_fu_235_p1 & ap_const_lv5_0);
    res_V_write_assign_fu_363_p2 <= std_logic_vector(signed(tmp3_cast_fu_360_p1) + signed(tmp1_fu_354_p2));
    tmp1_fu_354_p2 <= std_logic_vector(signed(tmp2_cast_fu_351_p1) + signed(tmp_3_cast_fu_348_p1));
        tmp2_cast_fu_351_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp2_reg_414),29));

    tmp2_fu_326_p2 <= std_logic_vector(signed(tmp_6_cast_fu_314_p1) + signed(tmp_9_cast_fu_317_p1));
        tmp3_cast_fu_360_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp3_reg_419),29));

    tmp3_fu_342_p2 <= std_logic_vector(signed(tmp4_cast_fu_338_p1) + signed(tmp_12_cast_fu_320_p1));
        tmp4_cast_fu_338_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp4_fu_332_p2),22));

    tmp4_fu_332_p2 <= std_logic_vector(signed(tmp_15_cast_fu_323_p1) + signed(ap_const_lv21_1F1C57));
        tmp_12_cast_fu_320_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_256_reg_384_pp0_iter2_reg),22));

        tmp_15_cast_fu_323_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_257_reg_409),21));

        tmp_3_cast_fu_348_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_253_reg_394_pp0_iter3_reg),29));

        tmp_6_cast_fu_314_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_254_reg_399),23));

        tmp_9_cast_fu_317_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_255_reg_404),23));

end behav;
