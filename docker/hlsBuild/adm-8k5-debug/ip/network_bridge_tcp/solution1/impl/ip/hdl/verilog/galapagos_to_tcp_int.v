// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module galapagos_to_tcp_int (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        rxGalapagosBridge_V_dout,
        rxGalapagosBridge_V_empty_n,
        rxGalapagosBridge_V_read,
        txStatus_V_V_dout,
        txStatus_V_V_empty_n,
        txStatus_V_V_read,
        sessionID_fifo_V_V_dout,
        sessionID_fifo_V_V_empty_n,
        sessionID_fifo_V_V_read,
        g2t_read_sid_V_V_dout,
        g2t_read_sid_V_V_empty_n,
        g2t_read_sid_V_V_read,
        g2t_write_sid_V_V_din,
        g2t_write_sid_V_V_full_n,
        g2t_write_sid_V_V_write,
        g2t_write_dest_V_V_din,
        g2t_write_dest_V_V_full_n,
        g2t_write_dest_V_V_write,
        g2t_read_dest_V_V_din,
        g2t_read_dest_V_V_full_n,
        g2t_read_dest_V_V_write,
        txData_V_din,
        txData_V_full_n,
        txData_V_write,
        txMetaData_V_din,
        txMetaData_V_full_n,
        txMetaData_V_write,
        ip_fifo_V_V_din,
        ip_fifo_V_V_full_n,
        ip_fifo_V_V_write,
        start_out,
        start_write,
        state_out_V,
        state_out_V_ap_vld,
        header_out_V,
        header_out_V_ap_vld,
        size_out_V,
        size_out_V_ap_vld,
        sessionID_out_V,
        sessionID_out_V_ap_vld,
        ip_table_V_address0,
        ip_table_V_ce0,
        ip_table_V_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [72:0] rxGalapagosBridge_V_dout;
input   rxGalapagosBridge_V_empty_n;
output   rxGalapagosBridge_V_read;
input  [16:0] txStatus_V_V_dout;
input   txStatus_V_V_empty_n;
output   txStatus_V_V_read;
input  [15:0] sessionID_fifo_V_V_dout;
input   sessionID_fifo_V_V_empty_n;
output   sessionID_fifo_V_V_read;
input  [15:0] g2t_read_sid_V_V_dout;
input   g2t_read_sid_V_V_empty_n;
output   g2t_read_sid_V_V_read;
output  [15:0] g2t_write_sid_V_V_din;
input   g2t_write_sid_V_V_full_n;
output   g2t_write_sid_V_V_write;
output  [7:0] g2t_write_dest_V_V_din;
input   g2t_write_dest_V_V_full_n;
output   g2t_write_dest_V_V_write;
output  [7:0] g2t_read_dest_V_V_din;
input   g2t_read_dest_V_V_full_n;
output   g2t_read_dest_V_V_write;
output  [72:0] txData_V_din;
input   txData_V_full_n;
output   txData_V_write;
output  [31:0] txMetaData_V_din;
input   txMetaData_V_full_n;
output   txMetaData_V_write;
output  [31:0] ip_fifo_V_V_din;
input   ip_fifo_V_V_full_n;
output   ip_fifo_V_V_write;
output   start_out;
output   start_write;
output  [3:0] state_out_V;
output   state_out_V_ap_vld;
output  [63:0] header_out_V;
output   header_out_V_ap_vld;
output  [15:0] size_out_V;
output   size_out_V_ap_vld;
output  [15:0] sessionID_out_V;
output   sessionID_out_V_ap_vld;
output  [7:0] ip_table_V_address0;
output   ip_table_V_ce0;
input  [31:0] ip_table_V_q0;

reg ap_done;
reg ap_idle;
reg rxGalapagosBridge_V_read;
reg txStatus_V_V_read;
reg sessionID_fifo_V_V_read;
reg g2t_read_sid_V_V_read;
reg g2t_write_sid_V_V_write;
reg g2t_write_dest_V_V_write;
reg g2t_read_dest_V_V_write;
reg[72:0] txData_V_din;
reg txData_V_write;
reg[31:0] txMetaData_V_din;
reg txMetaData_V_write;
reg ip_fifo_V_V_write;
reg start_write;
reg state_out_V_ap_vld;
reg header_out_V_ap_vld;
reg[15:0] size_out_V;
reg size_out_V_ap_vld;
reg sessionID_out_V_ap_vld;
reg ip_table_V_ce0;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg    internal_ap_ready;
wire   [3:0] state_1_load_load_fu_305_p1;
wire   [0:0] grp_nbreadreq_fu_155_p3;
reg    ap_predicate_op9_read_state1;
wire   [0:0] grp_nbreadreq_fu_169_p3;
reg    ap_predicate_op14_read_state1;
reg    ap_predicate_op21_read_state1;
wire   [0:0] tmp_17_nbreadreq_fu_183_p3;
reg    ap_predicate_op28_read_state1;
wire   [0:0] tmp_16_nbreadreq_fu_197_p3;
reg    ap_predicate_op32_read_state1;
reg    ap_predicate_op43_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [3:0] state_1_load_reg_522;
reg   [0:0] tmp_17_reg_552;
reg    ap_predicate_op60_write_state2;
reg   [0:0] tmp_reg_580;
reg    ap_predicate_op69_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [3:0] state_1_load_reg_522_pp0_iter1_reg;
reg   [0:0] tmp_22_reg_531;
reg   [0:0] tmp_22_reg_531_pp0_iter1_reg;
reg    ap_predicate_op87_write_state3;
reg   [0:0] tmp_16_reg_562;
reg   [0:0] tmp_16_reg_562_pp0_iter1_reg;
reg   [0:0] tmp_i_reg_571;
reg   [0:0] tmp_i_reg_571_pp0_iter1_reg;
reg    ap_predicate_op108_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [3:0] state_1;
reg   [63:0] header_data_V;
reg   [7:0] dest_V;
reg   [15:0] sessionID_V;
reg   [7:0] header_keep_V;
reg   [0:0] header_last_V;
reg    rxGalapagosBridge_V_blk_n;
wire    ap_block_pp0_stage0;
reg    txStatus_V_V_blk_n;
reg    txMetaData_V_blk_n;
reg    txData_V_blk_n;
reg    g2t_read_dest_V_V_blk_n;
reg    g2t_read_sid_V_V_blk_n;
reg    ip_fifo_V_V_blk_n;
reg    sessionID_fifo_V_V_blk_n;
reg    g2t_write_sid_V_V_blk_n;
reg    g2t_write_dest_V_V_blk_n;
reg   [7:0] tmp_V_15_reg_526;
reg   [72:0] tmp_4_reg_535;
reg   [72:0] tmp_4_reg_535_pp0_iter1_reg;
wire   [0:0] tmp_last_V_1_fu_314_p3;
reg   [15:0] tmp_V_14_reg_556;
reg   [15:0] tmp_V_13_reg_566;
wire   [0:0] tmp_i_fu_380_p2;
reg   [0:0] tmp_reg_580_pp0_iter1_reg;
wire   [63:0] p_Val2_1_fu_401_p1;
reg   [63:0] p_Val2_1_reg_584;
reg   [63:0] p_Val2_1_reg_584_pp0_iter1_reg;
reg   [7:0] tmp_keep_V_4_load_ne_reg_590;
reg   [7:0] tmp_V_reg_595;
reg   [15:0] txMetaDataWord_sessi_reg_600;
reg   [31:0] tmp_V_18_reg_607;
reg    ap_block_pp0_stage0_subdone;
reg   [1:0] ap_phi_mux_storemerge2_i_phi_fu_289_p4;
wire   [1:0] ap_phi_reg_pp0_iter0_storemerge2_i_reg_286;
wire   [63:0] tmp_21_i_fu_386_p1;
reg    ap_block_pp0_stage0_01001;
wire   [72:0] tmp_2_fu_487_p4;
wire   [31:0] tmp_3_fu_471_p3;
wire   [31:0] tmp_1_fu_509_p3;
wire   [3:0] storemerge_i_fu_328_p3;
wire   [3:0] storemerge1_cast_i_c_fu_354_p3;
wire   [3:0] storemerge2_cast_i_fu_391_p1;
wire   [15:0] size_V_3_fu_466_p1;
wire   [15:0] size_V_1_fu_502_p2;
wire   [0:0] grp_fu_297_p3;
wire   [15:0] size_V_fu_498_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_520;
reg    ap_condition_376;
reg    ap_condition_403;
reg    ap_condition_214;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 state_1 = 4'd0;
#0 header_data_V = 64'd0;
#0 dest_V = 8'd0;
#0 sessionID_V = 16'd0;
#0 header_keep_V = 8'd0;
#0 header_last_V = 1'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= real_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_376)) begin
        if (((state_1_load_reg_522 == 4'd1) & (tmp_16_reg_562 == 1'd1))) begin
            sessionID_V <= tmp_V_13_reg_566;
        end else if ((ap_predicate_op60_write_state2 == 1'b1)) begin
            sessionID_V <= tmp_V_14_reg_556;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_214)) begin
        if ((ap_predicate_op43_read_state1 == 1'b1)) begin
            state_1 <= 4'd1;
        end else if (((tmp_16_nbreadreq_fu_197_p3 == 1'd1) & (state_1 == 4'd1))) begin
            state_1 <= storemerge2_cast_i_fu_391_p1;
        end else if ((ap_predicate_op28_read_state1 == 1'b1)) begin
            state_1 <= 4'd3;
        end else if ((state_1_load_load_fu_305_p1 == 4'd3)) begin
            state_1 <= 4'd4;
        end else if ((ap_predicate_op21_read_state1 == 1'b1)) begin
            state_1 <= storemerge1_cast_i_c_fu_354_p3;
        end else if ((state_1_load_load_fu_305_p1 == 4'd5)) begin
            state_1 <= 4'd6;
        end else if ((state_1_load_load_fu_305_p1 == 4'd6)) begin
            state_1 <= 4'd7;
        end else if ((ap_predicate_op14_read_state1 == 1'b1)) begin
            state_1 <= storemerge_i_fu_328_p3;
        end else if ((1'b1 == ap_condition_403)) begin
            state_1 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op43_read_state1 == 1'b1))) begin
        dest_V <= {{rxGalapagosBridge_V_dout[31:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_580_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (state_1_load_reg_522_pp0_iter1_reg == 4'd0))) begin
        header_data_V <= p_Val2_1_reg_584_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op69_write_state2 == 1'b1))) begin
        header_keep_V <= tmp_keep_V_4_load_ne_reg_590;
        header_last_V <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op43_read_state1 == 1'b1))) begin
        p_Val2_1_reg_584 <= p_Val2_1_fu_401_p1;
        tmp_V_reg_595 <= {{rxGalapagosBridge_V_dout[31:24]}};
        tmp_keep_V_4_load_ne_reg_590 <= {{rxGalapagosBridge_V_dout[71:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Val2_1_reg_584_pp0_iter1_reg <= p_Val2_1_reg_584;
        state_1_load_reg_522 <= state_1;
        state_1_load_reg_522_pp0_iter1_reg <= state_1_load_reg_522;
        tmp_16_reg_562_pp0_iter1_reg <= tmp_16_reg_562;
        tmp_22_reg_531_pp0_iter1_reg <= tmp_22_reg_531;
        tmp_4_reg_535_pp0_iter1_reg <= tmp_4_reg_535;
        tmp_V_15_reg_526 <= dest_V;
        tmp_i_reg_571_pp0_iter1_reg <= tmp_i_reg_571;
        tmp_reg_580_pp0_iter1_reg <= tmp_reg_580;
        txMetaDataWord_sessi_reg_600 <= sessionID_V;
    end
end

always @ (posedge ap_clk) begin
    if (((state_1 == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_16_reg_562 <= g2t_read_sid_V_V_empty_n;
    end
end

always @ (posedge ap_clk) begin
    if (((state_1 == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_17_reg_552 <= sessionID_fifo_V_V_empty_n;
    end
end

always @ (posedge ap_clk) begin
    if (((state_1 == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_22_reg_531 <= rxGalapagosBridge_V_empty_n;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op9_read_state1 == 1'b1))) begin
        tmp_4_reg_535 <= rxGalapagosBridge_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op32_read_state1 == 1'b1))) begin
        tmp_V_13_reg_566 <= g2t_read_sid_V_V_dout;
        tmp_i_reg_571 <= tmp_i_fu_380_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op28_read_state1 == 1'b1))) begin
        tmp_V_14_reg_556 <= sessionID_fifo_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((state_1_load_reg_522 == 4'd1) & (tmp_i_reg_571 == 1'd1) & (tmp_16_reg_562 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_18_reg_607 <= ip_table_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((state_1 == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_580 <= rxGalapagosBridge_V_empty_n;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_520)) begin
        if ((tmp_i_fu_380_p2 == 1'd0)) begin
            ap_phi_mux_storemerge2_i_phi_fu_289_p4 = 2'd3;
        end else if ((tmp_i_fu_380_p2 == 1'd1)) begin
            ap_phi_mux_storemerge2_i_phi_fu_289_p4 = 2'd2;
        end else begin
            ap_phi_mux_storemerge2_i_phi_fu_289_p4 = ap_phi_reg_pp0_iter0_storemerge2_i_reg_286;
        end
    end else begin
        ap_phi_mux_storemerge2_i_phi_fu_289_p4 = ap_phi_reg_pp0_iter0_storemerge2_i_reg_286;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op69_write_state2 == 1'b1))) begin
        g2t_read_dest_V_V_blk_n = g2t_read_dest_V_V_full_n;
    end else begin
        g2t_read_dest_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op69_write_state2 == 1'b1))) begin
        g2t_read_dest_V_V_write = 1'b1;
    end else begin
        g2t_read_dest_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op32_read_state1 == 1'b1))) begin
        g2t_read_sid_V_V_blk_n = g2t_read_sid_V_V_empty_n;
    end else begin
        g2t_read_sid_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op32_read_state1 == 1'b1))) begin
        g2t_read_sid_V_V_read = 1'b1;
    end else begin
        g2t_read_sid_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op60_write_state2 == 1'b1))) begin
        g2t_write_dest_V_V_blk_n = g2t_write_dest_V_V_full_n;
    end else begin
        g2t_write_dest_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op60_write_state2 == 1'b1))) begin
        g2t_write_dest_V_V_write = 1'b1;
    end else begin
        g2t_write_dest_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op60_write_state2 == 1'b1))) begin
        g2t_write_sid_V_V_blk_n = g2t_write_sid_V_V_full_n;
    end else begin
        g2t_write_sid_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op60_write_state2 == 1'b1))) begin
        g2t_write_sid_V_V_write = 1'b1;
    end else begin
        g2t_write_sid_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_580_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (state_1_load_reg_522_pp0_iter1_reg == 4'd0))) begin
        header_out_V_ap_vld = 1'b1;
    end else begin
        header_out_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op108_write_state3 == 1'b1))) begin
        ip_fifo_V_V_blk_n = ip_fifo_V_V_full_n;
    end else begin
        ip_fifo_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op108_write_state3 == 1'b1))) begin
        ip_fifo_V_V_write = 1'b1;
    end else begin
        ip_fifo_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ip_table_V_ce0 = 1'b1;
    end else begin
        ip_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op9_read_state1 == 1'b1)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op43_read_state1 == 1'b1)))) begin
        rxGalapagosBridge_V_blk_n = rxGalapagosBridge_V_empty_n;
    end else begin
        rxGalapagosBridge_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op9_read_state1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op43_read_state1 == 1'b1)))) begin
        rxGalapagosBridge_V_read = 1'b1;
    end else begin
        rxGalapagosBridge_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op28_read_state1 == 1'b1))) begin
        sessionID_fifo_V_V_blk_n = sessionID_fifo_V_V_empty_n;
    end else begin
        sessionID_fifo_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op28_read_state1 == 1'b1))) begin
        sessionID_fifo_V_V_read = 1'b1;
    end else begin
        sessionID_fifo_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (state_1_load_reg_522_pp0_iter1_reg == 4'd3)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (state_1_load_reg_522_pp0_iter1_reg == 4'd6)))) begin
        sessionID_out_V_ap_vld = 1'b1;
    end else begin
        sessionID_out_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((state_1_load_reg_522_pp0_iter1_reg == 4'd3)) begin
            size_out_V = size_V_1_fu_502_p2;
        end else if ((state_1_load_reg_522_pp0_iter1_reg == 4'd6)) begin
            size_out_V = size_V_3_fu_466_p1;
        end else begin
            size_out_V = 'bx;
        end
    end else begin
        size_out_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (state_1_load_reg_522_pp0_iter1_reg == 4'd3)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (state_1_load_reg_522_pp0_iter1_reg == 4'd6)))) begin
        size_out_V_ap_vld = 1'b1;
    end else begin
        size_out_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        state_out_V_ap_vld = 1'b1;
    end else begin
        state_out_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (state_1_load_reg_522_pp0_iter1_reg == 4'd5)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op87_write_state3 == 1'b1)))) begin
        txData_V_blk_n = txData_V_full_n;
    end else begin
        txData_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((state_1_load_reg_522_pp0_iter1_reg == 4'd5)) begin
            txData_V_din = tmp_2_fu_487_p4;
        end else if ((ap_predicate_op87_write_state3 == 1'b1)) begin
            txData_V_din = tmp_4_reg_535_pp0_iter1_reg;
        end else begin
            txData_V_din = 'bx;
        end
    end else begin
        txData_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (state_1_load_reg_522_pp0_iter1_reg == 4'd5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op87_write_state3 == 1'b1)))) begin
        txData_V_write = 1'b1;
    end else begin
        txData_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (state_1_load_reg_522_pp0_iter1_reg == 4'd3)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (state_1_load_reg_522_pp0_iter1_reg == 4'd6)))) begin
        txMetaData_V_blk_n = txMetaData_V_full_n;
    end else begin
        txMetaData_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((state_1_load_reg_522_pp0_iter1_reg == 4'd3)) begin
            txMetaData_V_din = tmp_1_fu_509_p3;
        end else if ((state_1_load_reg_522_pp0_iter1_reg == 4'd6)) begin
            txMetaData_V_din = tmp_3_fu_471_p3;
        end else begin
            txMetaData_V_din = 'bx;
        end
    end else begin
        txMetaData_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (state_1_load_reg_522_pp0_iter1_reg == 4'd3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (state_1_load_reg_522_pp0_iter1_reg == 4'd6)))) begin
        txMetaData_V_write = 1'b1;
    end else begin
        txMetaData_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op21_read_state1 == 1'b1)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op14_read_state1 == 1'b1)))) begin
        txStatus_V_V_blk_n = txStatus_V_V_empty_n;
    end else begin
        txStatus_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op21_read_state1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op14_read_state1 == 1'b1)))) begin
        txStatus_V_V_read = 1'b1;
    end else begin
        txStatus_V_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((real_start == 1'b1) & ((real_start == 1'b0) | (ap_done_reg == 1'b1) | ((g2t_read_sid_V_V_empty_n == 1'b0) & (ap_predicate_op32_read_state1 == 1'b1)) | ((sessionID_fifo_V_V_empty_n == 1'b0) & (ap_predicate_op28_read_state1 == 1'b1)) | ((txStatus_V_V_empty_n == 1'b0) & (ap_predicate_op21_read_state1 == 1'b1)) | ((txStatus_V_V_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((rxGalapagosBridge_V_empty_n == 1'b0) & (ap_predicate_op9_read_state1 == 1'b1)) | ((rxGalapagosBridge_V_empty_n == 1'b0) & (ap_predicate_op43_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((ip_fifo_V_V_full_n == 1'b0) & (ap_predicate_op108_write_state3 == 1'b1)) | ((txMetaData_V_full_n == 1'b0) & (state_1_load_reg_522_pp0_iter1_reg == 4'd3)) | ((txMetaData_V_full_n == 1'b0) & (state_1_load_reg_522_pp0_iter1_reg == 4'd6)) | ((txData_V_full_n == 1'b0) & (state_1_load_reg_522_pp0_iter1_reg == 4'd5)) | ((txData_V_full_n == 1'b0) & (ap_predicate_op87_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((g2t_read_dest_V_V_full_n == 1'b0) & (ap_predicate_op69_write_state2 == 1'b1)) | ((g2t_write_dest_V_V_full_n == 1'b0) & (ap_predicate_op60_write_state2 == 1'b1)) | ((g2t_write_sid_V_V_full_n == 1'b0) & (ap_predicate_op60_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((real_start == 1'b1) & ((real_start == 1'b0) | (ap_done_reg == 1'b1) | ((g2t_read_sid_V_V_empty_n == 1'b0) & (ap_predicate_op32_read_state1 == 1'b1)) | ((sessionID_fifo_V_V_empty_n == 1'b0) & (ap_predicate_op28_read_state1 == 1'b1)) | ((txStatus_V_V_empty_n == 1'b0) & (ap_predicate_op21_read_state1 == 1'b1)) | ((txStatus_V_V_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((rxGalapagosBridge_V_empty_n == 1'b0) & (ap_predicate_op9_read_state1 == 1'b1)) | ((rxGalapagosBridge_V_empty_n == 1'b0) & (ap_predicate_op43_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((ip_fifo_V_V_full_n == 1'b0) & (ap_predicate_op108_write_state3 == 1'b1)) | ((txMetaData_V_full_n == 1'b0) & (state_1_load_reg_522_pp0_iter1_reg == 4'd3)) | ((txMetaData_V_full_n == 1'b0) & (state_1_load_reg_522_pp0_iter1_reg == 4'd6)) | ((txData_V_full_n == 1'b0) & (state_1_load_reg_522_pp0_iter1_reg == 4'd5)) | ((txData_V_full_n == 1'b0) & (ap_predicate_op87_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((g2t_read_dest_V_V_full_n == 1'b0) & (ap_predicate_op69_write_state2 == 1'b1)) | ((g2t_write_dest_V_V_full_n == 1'b0) & (ap_predicate_op60_write_state2 == 1'b1)) | ((g2t_write_sid_V_V_full_n == 1'b0) & (ap_predicate_op60_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((real_start == 1'b1) & ((real_start == 1'b0) | (ap_done_reg == 1'b1) | ((g2t_read_sid_V_V_empty_n == 1'b0) & (ap_predicate_op32_read_state1 == 1'b1)) | ((sessionID_fifo_V_V_empty_n == 1'b0) & (ap_predicate_op28_read_state1 == 1'b1)) | ((txStatus_V_V_empty_n == 1'b0) & (ap_predicate_op21_read_state1 == 1'b1)) | ((txStatus_V_V_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((rxGalapagosBridge_V_empty_n == 1'b0) & (ap_predicate_op9_read_state1 == 1'b1)) | ((rxGalapagosBridge_V_empty_n == 1'b0) & (ap_predicate_op43_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((ip_fifo_V_V_full_n == 1'b0) & (ap_predicate_op108_write_state3 == 1'b1)) | ((txMetaData_V_full_n == 1'b0) & (state_1_load_reg_522_pp0_iter1_reg == 4'd3)) | ((txMetaData_V_full_n == 1'b0) & (state_1_load_reg_522_pp0_iter1_reg == 4'd6)) | ((txData_V_full_n == 1'b0) & (state_1_load_reg_522_pp0_iter1_reg == 4'd5)) | ((txData_V_full_n == 1'b0) & (ap_predicate_op87_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((g2t_read_dest_V_V_full_n == 1'b0) & (ap_predicate_op69_write_state2 == 1'b1)) | ((g2t_write_dest_V_V_full_n == 1'b0) & (ap_predicate_op60_write_state2 == 1'b1)) | ((g2t_write_sid_V_V_full_n == 1'b0) & (ap_predicate_op60_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((real_start == 1'b0) | (ap_done_reg == 1'b1) | ((g2t_read_sid_V_V_empty_n == 1'b0) & (ap_predicate_op32_read_state1 == 1'b1)) | ((sessionID_fifo_V_V_empty_n == 1'b0) & (ap_predicate_op28_read_state1 == 1'b1)) | ((txStatus_V_V_empty_n == 1'b0) & (ap_predicate_op21_read_state1 == 1'b1)) | ((txStatus_V_V_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((rxGalapagosBridge_V_empty_n == 1'b0) & (ap_predicate_op9_read_state1 == 1'b1)) | ((rxGalapagosBridge_V_empty_n == 1'b0) & (ap_predicate_op43_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((g2t_read_dest_V_V_full_n == 1'b0) & (ap_predicate_op69_write_state2 == 1'b1)) | ((g2t_write_dest_V_V_full_n == 1'b0) & (ap_predicate_op60_write_state2 == 1'b1)) | ((g2t_write_sid_V_V_full_n == 1'b0) & (ap_predicate_op60_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((ip_fifo_V_V_full_n == 1'b0) & (ap_predicate_op108_write_state3 == 1'b1)) | ((txMetaData_V_full_n == 1'b0) & (state_1_load_reg_522_pp0_iter1_reg == 4'd3)) | ((txMetaData_V_full_n == 1'b0) & (state_1_load_reg_522_pp0_iter1_reg == 4'd6)) | ((txData_V_full_n == 1'b0) & (state_1_load_reg_522_pp0_iter1_reg == 4'd5)) | ((txData_V_full_n == 1'b0) & (ap_predicate_op87_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_condition_214 = ((1'b0 == ap_block_pp0_stage0_11001) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_376 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_403 = ((tmp_last_V_1_fu_314_p3 == 1'd1) & (grp_nbreadreq_fu_155_p3 == 1'd1) & (state_1 == 4'd8));
end

always @ (*) begin
    ap_condition_520 = ((tmp_16_nbreadreq_fu_197_p3 == 1'd1) & (state_1 == 4'd1) & (1'b0 == ap_block_pp0_stage0) & (real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = real_start;

assign ap_phi_reg_pp0_iter0_storemerge2_i_reg_286 = 'bx;

always @ (*) begin
    ap_predicate_op108_write_state3 = ((state_1_load_reg_522_pp0_iter1_reg == 4'd1) & (tmp_i_reg_571_pp0_iter1_reg == 1'd1) & (tmp_16_reg_562_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op14_read_state1 = ((grp_nbreadreq_fu_169_p3 == 1'd1) & (state_1 == 4'd7));
end

always @ (*) begin
    ap_predicate_op21_read_state1 = ((grp_nbreadreq_fu_169_p3 == 1'd1) & (state_1 == 4'd4));
end

always @ (*) begin
    ap_predicate_op28_read_state1 = ((tmp_17_nbreadreq_fu_183_p3 == 1'd1) & (state_1 == 4'd2));
end

always @ (*) begin
    ap_predicate_op32_read_state1 = ((tmp_16_nbreadreq_fu_197_p3 == 1'd1) & (state_1 == 4'd1));
end

always @ (*) begin
    ap_predicate_op43_read_state1 = ((grp_nbreadreq_fu_155_p3 == 1'd1) & (state_1 == 4'd0));
end

always @ (*) begin
    ap_predicate_op60_write_state2 = ((state_1_load_reg_522 == 4'd2) & (tmp_17_reg_552 == 1'd1));
end

always @ (*) begin
    ap_predicate_op69_write_state2 = ((tmp_reg_580 == 1'd1) & (state_1_load_reg_522 == 4'd0));
end

always @ (*) begin
    ap_predicate_op87_write_state3 = ((tmp_22_reg_531_pp0_iter1_reg == 1'd1) & (state_1_load_reg_522_pp0_iter1_reg == 4'd8));
end

always @ (*) begin
    ap_predicate_op9_read_state1 = ((grp_nbreadreq_fu_155_p3 == 1'd1) & (state_1 == 4'd8));
end

assign ap_ready = internal_ap_ready;

assign g2t_read_dest_V_V_din = tmp_V_reg_595;

assign g2t_write_dest_V_V_din = tmp_V_15_reg_526;

assign g2t_write_sid_V_V_din = tmp_V_14_reg_556;

assign grp_fu_297_p3 = txStatus_V_V_dout[32'd16];

assign grp_nbreadreq_fu_155_p3 = rxGalapagosBridge_V_empty_n;

assign grp_nbreadreq_fu_169_p3 = txStatus_V_V_empty_n;

assign header_out_V = p_Val2_1_reg_584_pp0_iter1_reg;

assign ip_fifo_V_V_din = tmp_V_18_reg_607;

assign ip_table_V_address0 = tmp_21_i_fu_386_p1;

assign p_Val2_1_fu_401_p1 = rxGalapagosBridge_V_dout[63:0];

assign sessionID_out_V = txMetaDataWord_sessi_reg_600;

assign size_V_1_fu_502_p2 = (16'd8 + size_V_fu_498_p1);

assign size_V_3_fu_466_p1 = header_data_V[15:0];

assign size_V_fu_498_p1 = header_data_V[15:0];

assign start_out = real_start;

assign state_1_load_load_fu_305_p1 = state_1;

assign state_out_V = state_1;

assign storemerge1_cast_i_c_fu_354_p3 = ((grp_fu_297_p3[0:0] === 1'b1) ? 4'd3 : 4'd5);

assign storemerge2_cast_i_fu_391_p1 = ap_phi_mux_storemerge2_i_phi_fu_289_p4;

assign storemerge_i_fu_328_p3 = ((grp_fu_297_p3[0:0] === 1'b1) ? 4'd6 : 4'd8);

assign tmp_16_nbreadreq_fu_197_p3 = g2t_read_sid_V_V_empty_n;

assign tmp_17_nbreadreq_fu_183_p3 = sessionID_fifo_V_V_empty_n;

assign tmp_1_fu_509_p3 = {{16'd8}, {txMetaDataWord_sessi_reg_600}};

assign tmp_21_i_fu_386_p1 = dest_V;

assign tmp_2_fu_487_p4 = {{{header_last_V}, {header_keep_V}}, {header_data_V}};

assign tmp_3_fu_471_p3 = {{size_V_3_fu_466_p1}, {txMetaDataWord_sessi_reg_600}};

assign tmp_i_fu_380_p2 = ((g2t_read_sid_V_V_dout == 16'd1000) ? 1'b1 : 1'b0);

assign tmp_last_V_1_fu_314_p3 = rxGalapagosBridge_V_dout[32'd72];

endmodule //galapagos_to_tcp_int
