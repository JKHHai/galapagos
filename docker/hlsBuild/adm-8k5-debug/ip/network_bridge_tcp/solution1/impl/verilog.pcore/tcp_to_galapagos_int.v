// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tcp_to_galapagos_int (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        rxData_V_dout,
        rxData_V_empty_n,
        rxData_V_read,
        t2g_read_sid_V_V_dout,
        t2g_read_sid_V_V_empty_n,
        t2g_read_sid_V_V_read,
        rxMetaData_V_V_dout,
        rxMetaData_V_V_empty_n,
        rxMetaData_V_V_read,
        txGalapagosBridge_V_din,
        txGalapagosBridge_V_full_n,
        txGalapagosBridge_V_write,
        t2g_write_dest_V_V_din,
        t2g_write_dest_V_V_full_n,
        t2g_write_dest_V_V_write,
        t2g_write_sid_V_V_din,
        t2g_write_sid_V_V_full_n,
        t2g_write_sid_V_V_write,
        t2g_read_dest_V_V_din,
        t2g_read_dest_V_V_full_n,
        t2g_read_dest_V_V_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [72:0] rxData_V_dout;
input   rxData_V_empty_n;
output   rxData_V_read;
input  [15:0] t2g_read_sid_V_V_dout;
input   t2g_read_sid_V_V_empty_n;
output   t2g_read_sid_V_V_read;
input  [15:0] rxMetaData_V_V_dout;
input   rxMetaData_V_V_empty_n;
output   rxMetaData_V_V_read;
output  [72:0] txGalapagosBridge_V_din;
input   txGalapagosBridge_V_full_n;
output   txGalapagosBridge_V_write;
output  [7:0] t2g_write_dest_V_V_din;
input   t2g_write_dest_V_V_full_n;
output   t2g_write_dest_V_V_write;
output  [15:0] t2g_write_sid_V_V_din;
input   t2g_write_sid_V_V_full_n;
output   t2g_write_sid_V_V_write;
output  [7:0] t2g_read_dest_V_V_din;
input   t2g_read_dest_V_V_full_n;
output   t2g_read_dest_V_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rxData_V_read;
reg t2g_read_sid_V_V_read;
reg rxMetaData_V_V_read;
reg[72:0] txGalapagosBridge_V_din;
reg txGalapagosBridge_V_write;
reg t2g_write_dest_V_V_write;
reg t2g_write_sid_V_V_write;
reg t2g_read_dest_V_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [2:0] state_load_load_fu_168_p1;
wire   [0:0] grp_nbreadreq_fu_98_p3;
reg    ap_predicate_op6_read_state1;
wire   [0:0] tmp_2_nbreadreq_fu_112_p3;
reg    ap_predicate_op12_read_state1;
reg    ap_predicate_op17_read_state1;
wire   [0:0] tmp_nbreadreq_fu_132_p3;
reg    ap_predicate_op29_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [2:0] state_load_reg_317;
reg   [0:0] tmp_3_reg_321;
reg    ap_predicate_op45_write_state2;
reg   [0:0] tmp_1_reg_334;
reg    ap_predicate_op64_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [2:0] state;
reg   [15:0] sessionID_V_1;
reg   [63:0] currWord_data_V;
reg   [7:0] currWord_keep_V;
reg   [0:0] currWord_last_V;
reg   [7:0] src_V;
reg    rxMetaData_V_V_blk_n;
wire    ap_block_pp0_stage0;
reg    rxData_V_blk_n;
reg    txGalapagosBridge_V_blk_n;
reg    t2g_read_dest_V_V_blk_n;
reg    t2g_read_sid_V_V_blk_n;
reg    t2g_write_dest_V_V_blk_n;
reg    t2g_write_sid_V_V_blk_n;
reg   [72:0] tmp_227_reg_325;
reg   [7:0] tmp_V_3_reg_338;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
wire   [72:0] tmp_11_fu_296_p4;
wire   [2:0] storemerge_i_fu_196_p3;
wire   [63:0] p_Val2_s_fu_210_p1;
wire   [0:0] tmp_i_fu_190_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_216;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 state = 3'd0;
#0 sessionID_V_1 = 16'd0;
#0 currWord_data_V = 64'd0;
#0 currWord_keep_V = 8'd0;
#0 currWord_last_V = 1'd0;
#0 src_V = 8'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op29_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        state <= 3'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op17_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        state <= 3'd2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op12_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        state <= storemerge_i_fu_196_p3;
    end else if (((state_load_load_fu_168_p1 == 3'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        state <= 3'd4;
    end else if (((state_load_load_fu_168_p1 == 3'd4) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        state <= 3'd5;
    end else if (~(1'b1 == 1'b1)) begin
        state <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op17_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        currWord_data_V <= p_Val2_s_fu_210_p1;
        currWord_keep_V <= {{rxData_V_dout[71:64]}};
        currWord_last_V <= rxData_V_dout[32'd72];
        src_V <= {{rxData_V_dout[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op29_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sessionID_V_1 <= rxMetaData_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        state_load_reg_317 <= state;
    end
end

always @ (posedge ap_clk) begin
    if (((state == 3'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_reg_334 <= rxData_V_empty_n;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op6_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_227_reg_325 <= rxData_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((state == 3'd5) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_3_reg_321 <= rxData_V_empty_n;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op17_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_3_reg_338 <= {{rxData_V_dout[23:16]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op17_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op6_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        rxData_V_blk_n = rxData_V_empty_n;
    end else begin
        rxData_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op17_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op6_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        rxData_V_read = 1'b1;
    end else begin
        rxData_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op29_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op17_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        rxMetaData_V_V_blk_n = rxMetaData_V_V_empty_n;
    end else begin
        rxMetaData_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op29_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op17_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        rxMetaData_V_V_read = 1'b1;
    end else begin
        rxMetaData_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op64_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        t2g_read_dest_V_V_blk_n = t2g_read_dest_V_V_full_n;
    end else begin
        t2g_read_dest_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op64_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t2g_read_dest_V_V_write = 1'b1;
    end else begin
        t2g_read_dest_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op12_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        t2g_read_sid_V_V_blk_n = t2g_read_sid_V_V_empty_n;
    end else begin
        t2g_read_sid_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op12_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t2g_read_sid_V_V_read = 1'b1;
    end else begin
        t2g_read_sid_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((state_load_reg_317 == 3'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        t2g_write_dest_V_V_blk_n = t2g_write_dest_V_V_full_n;
    end else begin
        t2g_write_dest_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((state_load_reg_317 == 3'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t2g_write_dest_V_V_write = 1'b1;
    end else begin
        t2g_write_dest_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((state_load_reg_317 == 3'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        t2g_write_sid_V_V_blk_n = t2g_write_sid_V_V_full_n;
    end else begin
        t2g_write_sid_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((state_load_reg_317 == 3'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t2g_write_sid_V_V_write = 1'b1;
    end else begin
        t2g_write_sid_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((state_load_reg_317 == 3'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op45_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        txGalapagosBridge_V_blk_n = txGalapagosBridge_V_full_n;
    end else begin
        txGalapagosBridge_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_216)) begin
        if ((state_load_reg_317 == 3'd4)) begin
            txGalapagosBridge_V_din = tmp_11_fu_296_p4;
        end else if ((ap_predicate_op45_write_state2 == 1'b1)) begin
            txGalapagosBridge_V_din = tmp_227_reg_325;
        end else begin
            txGalapagosBridge_V_din = 'bx;
        end
    end else begin
        txGalapagosBridge_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((state_load_reg_317 == 3'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op45_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        txGalapagosBridge_V_write = 1'b1;
    end else begin
        txGalapagosBridge_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((rxMetaData_V_V_empty_n == 1'b0) & (ap_predicate_op29_read_state1 == 1'b1)) | ((rxMetaData_V_V_empty_n == 1'b0) & (ap_predicate_op17_read_state1 == 1'b1)) | ((t2g_read_sid_V_V_empty_n == 1'b0) & (ap_predicate_op12_read_state1 == 1'b1)) | ((rxData_V_empty_n == 1'b0) & (ap_predicate_op17_read_state1 == 1'b1)) | ((rxData_V_empty_n == 1'b0) & (ap_predicate_op6_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((state_load_reg_317 == 3'd4) & (txGalapagosBridge_V_full_n == 1'b0)) | ((txGalapagosBridge_V_full_n == 1'b0) & (ap_predicate_op45_write_state2 == 1'b1)) | ((t2g_read_dest_V_V_full_n == 1'b0) & (ap_predicate_op64_write_state2 == 1'b1)) | ((state_load_reg_317 == 3'd3) & (t2g_write_sid_V_V_full_n == 1'b0)) | ((state_load_reg_317 == 3'd3) & (t2g_write_dest_V_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((rxMetaData_V_V_empty_n == 1'b0) & (ap_predicate_op29_read_state1 == 1'b1)) | ((rxMetaData_V_V_empty_n == 1'b0) & (ap_predicate_op17_read_state1 == 1'b1)) | ((t2g_read_sid_V_V_empty_n == 1'b0) & (ap_predicate_op12_read_state1 == 1'b1)) | ((rxData_V_empty_n == 1'b0) & (ap_predicate_op17_read_state1 == 1'b1)) | ((rxData_V_empty_n == 1'b0) & (ap_predicate_op6_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((state_load_reg_317 == 3'd4) & (txGalapagosBridge_V_full_n == 1'b0)) | ((txGalapagosBridge_V_full_n == 1'b0) & (ap_predicate_op45_write_state2 == 1'b1)) | ((t2g_read_dest_V_V_full_n == 1'b0) & (ap_predicate_op64_write_state2 == 1'b1)) | ((state_load_reg_317 == 3'd3) & (t2g_write_sid_V_V_full_n == 1'b0)) | ((state_load_reg_317 == 3'd3) & (t2g_write_dest_V_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((rxMetaData_V_V_empty_n == 1'b0) & (ap_predicate_op29_read_state1 == 1'b1)) | ((rxMetaData_V_V_empty_n == 1'b0) & (ap_predicate_op17_read_state1 == 1'b1)) | ((t2g_read_sid_V_V_empty_n == 1'b0) & (ap_predicate_op12_read_state1 == 1'b1)) | ((rxData_V_empty_n == 1'b0) & (ap_predicate_op17_read_state1 == 1'b1)) | ((rxData_V_empty_n == 1'b0) & (ap_predicate_op6_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((state_load_reg_317 == 3'd4) & (txGalapagosBridge_V_full_n == 1'b0)) | ((txGalapagosBridge_V_full_n == 1'b0) & (ap_predicate_op45_write_state2 == 1'b1)) | ((t2g_read_dest_V_V_full_n == 1'b0) & (ap_predicate_op64_write_state2 == 1'b1)) | ((state_load_reg_317 == 3'd3) & (t2g_write_sid_V_V_full_n == 1'b0)) | ((state_load_reg_317 == 3'd3) & (t2g_write_dest_V_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((rxMetaData_V_V_empty_n == 1'b0) & (ap_predicate_op29_read_state1 == 1'b1)) | ((rxMetaData_V_V_empty_n == 1'b0) & (ap_predicate_op17_read_state1 == 1'b1)) | ((t2g_read_sid_V_V_empty_n == 1'b0) & (ap_predicate_op12_read_state1 == 1'b1)) | ((rxData_V_empty_n == 1'b0) & (ap_predicate_op17_read_state1 == 1'b1)) | ((rxData_V_empty_n == 1'b0) & (ap_predicate_op6_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((state_load_reg_317 == 3'd4) & (txGalapagosBridge_V_full_n == 1'b0)) | ((txGalapagosBridge_V_full_n == 1'b0) & (ap_predicate_op45_write_state2 == 1'b1)) | ((t2g_read_dest_V_V_full_n == 1'b0) & (ap_predicate_op64_write_state2 == 1'b1)) | ((state_load_reg_317 == 3'd3) & (t2g_write_sid_V_V_full_n == 1'b0)) | ((state_load_reg_317 == 3'd3) & (t2g_write_dest_V_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_216 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op12_read_state1 = ((tmp_2_nbreadreq_fu_112_p3 == 1'd1) & (state == 3'd2));
end

always @ (*) begin
    ap_predicate_op17_read_state1 = ((grp_nbreadreq_fu_98_p3 == 1'd1) & (state == 3'd1));
end

always @ (*) begin
    ap_predicate_op29_read_state1 = ((tmp_nbreadreq_fu_132_p3 == 1'd1) & (state == 3'd0));
end

always @ (*) begin
    ap_predicate_op45_write_state2 = ((tmp_3_reg_321 == 1'd1) & (state_load_reg_317 == 3'd5));
end

always @ (*) begin
    ap_predicate_op64_write_state2 = ((state_load_reg_317 == 3'd1) & (tmp_1_reg_334 == 1'd1));
end

always @ (*) begin
    ap_predicate_op6_read_state1 = ((grp_nbreadreq_fu_98_p3 == 1'd1) & (state == 3'd5));
end

assign grp_nbreadreq_fu_98_p3 = rxData_V_empty_n;

assign p_Val2_s_fu_210_p1 = rxData_V_dout[63:0];

assign state_load_load_fu_168_p1 = state;

assign storemerge_i_fu_196_p3 = ((tmp_i_fu_190_p2[0:0] === 1'b1) ? 3'd3 : 3'd4);

assign t2g_read_dest_V_V_din = tmp_V_3_reg_338;

assign t2g_write_dest_V_V_din = src_V;

assign t2g_write_sid_V_V_din = sessionID_V_1;

assign tmp_11_fu_296_p4 = {{{currWord_last_V}, {currWord_keep_V}}, {currWord_data_V}};

assign tmp_2_nbreadreq_fu_112_p3 = t2g_read_sid_V_V_empty_n;

assign tmp_i_fu_190_p2 = ((t2g_read_sid_V_V_dout == 16'd1000) ? 1'b1 : 1'b0);

assign tmp_nbreadreq_fu_132_p3 = rxMetaData_V_V_empty_n;

endmodule //tcp_to_galapagos_int
