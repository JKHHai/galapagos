#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("rxGalapagosBridge_V_dout", 73, hls_in, 0, "ap_fifo", "fifo_data", 1),
	Port_Property("rxGalapagosBridge_V_empty_n", 1, hls_in, 0, "ap_fifo", "fifo_status", 1),
	Port_Property("rxGalapagosBridge_V_read", 1, hls_out, 0, "ap_fifo", "fifo_update", 1),
	Port_Property("txMetaData_V_din", 32, hls_out, 1, "ap_fifo", "fifo_data", 1),
	Port_Property("txMetaData_V_full_n", 1, hls_in, 1, "ap_fifo", "fifo_status", 1),
	Port_Property("txMetaData_V_write", 1, hls_out, 1, "ap_fifo", "fifo_update", 1),
	Port_Property("openConnection_V_din", 48, hls_out, 2, "ap_fifo", "fifo_data", 1),
	Port_Property("openConnection_V_full_n", 1, hls_in, 2, "ap_fifo", "fifo_status", 1),
	Port_Property("openConnection_V_write", 1, hls_out, 2, "ap_fifo", "fifo_update", 1),
	Port_Property("openConStatus_V_dout", 17, hls_in, 3, "ap_fifo", "fifo_data", 1),
	Port_Property("openConStatus_V_empty_n", 1, hls_in, 3, "ap_fifo", "fifo_status", 1),
	Port_Property("openConStatus_V_read", 1, hls_out, 3, "ap_fifo", "fifo_update", 1),
	Port_Property("txData_V_din", 73, hls_out, 4, "ap_fifo", "fifo_data", 1),
	Port_Property("txData_V_full_n", 1, hls_in, 4, "ap_fifo", "fifo_status", 1),
	Port_Property("txData_V_write", 1, hls_out, 4, "ap_fifo", "fifo_update", 1),
	Port_Property("txStatus_V_V_dout", 17, hls_in, 5, "ap_fifo", "fifo_data", 1),
	Port_Property("txStatus_V_V_empty_n", 1, hls_in, 5, "ap_fifo", "fifo_status", 1),
	Port_Property("txStatus_V_V_read", 1, hls_out, 5, "ap_fifo", "fifo_update", 1),
	Port_Property("listenPort_V_V_din", 16, hls_out, 6, "ap_fifo", "fifo_data", 1),
	Port_Property("listenPort_V_V_full_n", 1, hls_in, 6, "ap_fifo", "fifo_status", 1),
	Port_Property("listenPort_V_V_write", 1, hls_out, 6, "ap_fifo", "fifo_update", 1),
	Port_Property("listenPortStatus_V_dout", 1, hls_in, 7, "ap_fifo", "fifo_data", 1),
	Port_Property("listenPortStatus_V_empty_n", 1, hls_in, 7, "ap_fifo", "fifo_status", 1),
	Port_Property("listenPortStatus_V_read", 1, hls_out, 7, "ap_fifo", "fifo_update", 1),
	Port_Property("notifications_V_dout", 81, hls_in, 8, "ap_fifo", "fifo_data", 1),
	Port_Property("notifications_V_empty_n", 1, hls_in, 8, "ap_fifo", "fifo_status", 1),
	Port_Property("notifications_V_read", 1, hls_out, 8, "ap_fifo", "fifo_update", 1),
	Port_Property("readRequest_V_din", 32, hls_out, 9, "ap_fifo", "fifo_data", 1),
	Port_Property("readRequest_V_full_n", 1, hls_in, 9, "ap_fifo", "fifo_status", 1),
	Port_Property("readRequest_V_write", 1, hls_out, 9, "ap_fifo", "fifo_update", 1),
	Port_Property("rxMetaData_V_V_dout", 16, hls_in, 10, "ap_fifo", "fifo_data", 1),
	Port_Property("rxMetaData_V_V_empty_n", 1, hls_in, 10, "ap_fifo", "fifo_status", 1),
	Port_Property("rxMetaData_V_V_read", 1, hls_out, 10, "ap_fifo", "fifo_update", 1),
	Port_Property("rxData_V_dout", 73, hls_in, 11, "ap_fifo", "fifo_data", 1),
	Port_Property("rxData_V_empty_n", 1, hls_in, 11, "ap_fifo", "fifo_status", 1),
	Port_Property("rxData_V_read", 1, hls_out, 11, "ap_fifo", "fifo_update", 1),
	Port_Property("txGalapagosBridge_V_din", 73, hls_out, 12, "ap_fifo", "fifo_data", 1),
	Port_Property("txGalapagosBridge_V_full_n", 1, hls_in, 12, "ap_fifo", "fifo_status", 1),
	Port_Property("txGalapagosBridge_V_write", 1, hls_out, 12, "ap_fifo", "fifo_update", 1),
	Port_Property("state_out_V", 4, hls_out, 13, "ap_vld", "out_data", 1),
	Port_Property("header_out_V", 64, hls_out, 14, "ap_vld", "out_data", 1),
	Port_Property("size_out_V", 16, hls_out, 15, "ap_vld", "out_data", 1),
	Port_Property("sessionID_out_V", 16, hls_out, 16, "ap_vld", "out_data", 1),
	Port_Property("ip_table_V_address0", 8, hls_out, 17, "ap_memory", "mem_address", 1),
	Port_Property("ip_table_V_ce0", 1, hls_out, 17, "ap_memory", "mem_ce", 1),
	Port_Property("ip_table_V_d0", 32, hls_out, 17, "ap_memory", "mem_din", 1),
	Port_Property("ip_table_V_q0", 32, hls_in, 17, "ap_memory", "mem_dout", 1),
	Port_Property("ip_table_V_we0", 1, hls_out, 17, "ap_memory", "mem_we", 1),
	Port_Property("ip_table_V_address1", 8, hls_out, 17, "ap_memory", "mem_address", 1),
	Port_Property("ip_table_V_ce1", 1, hls_out, 17, "ap_memory", "mem_ce", 1),
	Port_Property("ip_table_V_d1", 32, hls_out, 17, "ap_memory", "mem_din", 1),
	Port_Property("ip_table_V_q1", 32, hls_in, 17, "ap_memory", "mem_dout", 1),
	Port_Property("ip_table_V_we1", 1, hls_out, 17, "ap_memory", "mem_we", 1),
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("state_out_V_ap_vld", 1, hls_out, 13, "ap_vld", "out_vld", 1),
	Port_Property("header_out_V_ap_vld", 1, hls_out, 14, "ap_vld", "out_vld", 1),
	Port_Property("size_out_V_ap_vld", 1, hls_out, 15, "ap_vld", "out_vld", 1),
	Port_Property("sessionID_out_V_ap_vld", 1, hls_out, 16, "ap_vld", "out_vld", 1),
};
const char* HLS_Design_Meta::dut_name = "network_bridge_tcp";
