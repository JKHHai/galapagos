-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity open_port is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    listenPortStatus_V_dout : IN STD_LOGIC;
    listenPortStatus_V_empty_n : IN STD_LOGIC;
    listenPortStatus_V_read : OUT STD_LOGIC;
    notifications_V_dout : IN STD_LOGIC_VECTOR (80 downto 0);
    notifications_V_empty_n : IN STD_LOGIC;
    notifications_V_read : OUT STD_LOGIC;
    listenPort_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    listenPort_V_V_full_n : IN STD_LOGIC;
    listenPort_V_V_write : OUT STD_LOGIC;
    readRequest_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    readRequest_V_full_n : IN STD_LOGIC;
    readRequest_V_write : OUT STD_LOGIC );
end;


architecture behav of open_port is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal brmerge_fu_117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_nbreadreq_fu_66_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op11_read_state1 : BOOLEAN;
    signal tmp_2_nbreadreq_fu_80_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal brmerge_reg_165 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_173 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_177 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op34_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal listenDone : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal waitPortStatus : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal listenPort_V_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal listenPortStatus_V_blk_n : STD_LOGIC;
    signal notifications_V_blk_n : STD_LOGIC;
    signal readRequest_V_blk_n : STD_LOGIC;
    signal tmp_s_fu_151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_157_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_181 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_length_V_fu_141_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_96 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    waitPortStatus_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_96)) then
                if ((ap_predicate_op11_read_state1 = ap_const_boolean_1)) then 
                    waitPortStatus <= ap_const_lv1_0;
                elsif ((brmerge_fu_117_p2 = ap_const_lv1_0)) then 
                    waitPortStatus <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                brmerge_reg_165 <= brmerge_fu_117_p2;
                tmp_2_reg_173 <= (0=>notifications_V_empty_n, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1))) then
                listenDone <= (0=>listenPortStatus_V_dout, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_s_fu_151_p2 = ap_const_lv1_0) and (tmp_2_nbreadreq_fu_80_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_1_reg_181 <= tmp_1_fu_157_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_2_nbreadreq_fu_80_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_s_reg_177 <= tmp_s_fu_151_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, listenPortStatus_V_empty_n, ap_predicate_op11_read_state1, notifications_V_empty_n, tmp_2_nbreadreq_fu_80_p3, listenPort_V_V_full_n, brmerge_reg_165, readRequest_V_full_n, ap_predicate_op34_write_state2)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((readRequest_V_full_n = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((brmerge_reg_165 = ap_const_lv1_0) and (listenPort_V_V_full_n = ap_const_logic_0)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_2_nbreadreq_fu_80_p3 = ap_const_lv1_1) and (notifications_V_empty_n = ap_const_logic_0)) or ((listenPortStatus_V_empty_n = ap_const_logic_0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, listenPortStatus_V_empty_n, ap_predicate_op11_read_state1, notifications_V_empty_n, tmp_2_nbreadreq_fu_80_p3, listenPort_V_V_full_n, brmerge_reg_165, readRequest_V_full_n, ap_predicate_op34_write_state2)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((readRequest_V_full_n = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((brmerge_reg_165 = ap_const_lv1_0) and (listenPort_V_V_full_n = ap_const_logic_0)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_2_nbreadreq_fu_80_p3 = ap_const_lv1_1) and (notifications_V_empty_n = ap_const_logic_0)) or ((listenPortStatus_V_empty_n = ap_const_logic_0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, listenPortStatus_V_empty_n, ap_predicate_op11_read_state1, notifications_V_empty_n, tmp_2_nbreadreq_fu_80_p3, listenPort_V_V_full_n, brmerge_reg_165, readRequest_V_full_n, ap_predicate_op34_write_state2)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((readRequest_V_full_n = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((brmerge_reg_165 = ap_const_lv1_0) and (listenPort_V_V_full_n = ap_const_logic_0)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_2_nbreadreq_fu_80_p3 = ap_const_lv1_1) and (notifications_V_empty_n = ap_const_logic_0)) or ((listenPortStatus_V_empty_n = ap_const_logic_0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, listenPortStatus_V_empty_n, ap_predicate_op11_read_state1, notifications_V_empty_n, tmp_2_nbreadreq_fu_80_p3)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_2_nbreadreq_fu_80_p3 = ap_const_lv1_1) and (notifications_V_empty_n = ap_const_logic_0)) or ((listenPortStatus_V_empty_n = ap_const_logic_0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(listenPort_V_V_full_n, brmerge_reg_165, readRequest_V_full_n, ap_predicate_op34_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((readRequest_V_full_n = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((brmerge_reg_165 = ap_const_lv1_0) and (listenPort_V_V_full_n = ap_const_logic_0)));
    end process;


    ap_condition_96_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_96 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op11_read_state1_assign_proc : process(brmerge_fu_117_p2, tmp_nbreadreq_fu_66_p3, waitPortStatus)
    begin
                ap_predicate_op11_read_state1 <= ((tmp_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (waitPortStatus = ap_const_lv1_1) and (brmerge_fu_117_p2 = ap_const_lv1_1));
    end process;


    ap_predicate_op34_write_state2_assign_proc : process(tmp_2_reg_173, tmp_s_reg_177)
    begin
                ap_predicate_op34_write_state2 <= ((tmp_s_reg_177 = ap_const_lv1_0) and (tmp_2_reg_173 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_117_p2 <= (waitPortStatus or listenDone);

    listenPortStatus_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, listenPortStatus_V_empty_n, ap_predicate_op11_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            listenPortStatus_V_blk_n <= listenPortStatus_V_empty_n;
        else 
            listenPortStatus_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    listenPortStatus_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op11_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1))) then 
            listenPortStatus_V_read <= ap_const_logic_1;
        else 
            listenPortStatus_V_read <= ap_const_logic_0;
        end if; 
    end process;


    listenPort_V_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, listenPort_V_V_full_n, brmerge_reg_165, ap_block_pp0_stage0)
    begin
        if (((brmerge_reg_165 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            listenPort_V_V_blk_n <= listenPort_V_V_full_n;
        else 
            listenPort_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    listenPort_V_V_din <= ap_const_lv16_7;

    listenPort_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, brmerge_reg_165, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (brmerge_reg_165 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            listenPort_V_V_write <= ap_const_logic_1;
        else 
            listenPort_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    notifications_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, notifications_V_empty_n, tmp_2_nbreadreq_fu_80_p3, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_2_nbreadreq_fu_80_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            notifications_V_blk_n <= notifications_V_empty_n;
        else 
            notifications_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    notifications_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_2_nbreadreq_fu_80_p3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_2_nbreadreq_fu_80_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            notifications_V_read <= ap_const_logic_1;
        else 
            notifications_V_read <= ap_const_logic_0;
        end if; 
    end process;


    readRequest_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, readRequest_V_full_n, ap_predicate_op34_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            readRequest_V_blk_n <= readRequest_V_full_n;
        else 
            readRequest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    readRequest_V_din <= tmp_1_reg_181;

    readRequest_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op34_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1))) then 
            readRequest_V_write <= ap_const_logic_1;
        else 
            readRequest_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_157_p1 <= notifications_V_dout(32 - 1 downto 0);
    tmp_2_nbreadreq_fu_80_p3 <= (0=>notifications_V_empty_n, others=>'-');
    tmp_length_V_fu_141_p4 <= notifications_V_dout(31 downto 16);
    tmp_nbreadreq_fu_66_p3 <= (0=>listenPortStatus_V_empty_n, others=>'-');
    tmp_s_fu_151_p2 <= "1" when (tmp_length_V_fu_141_p4 = ap_const_lv16_0) else "0";
end behav;
