// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _galapagos_to_tcp_int_HH_
#define _galapagos_to_tcp_int_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct galapagos_to_tcp_int : public sc_module {
    // Port declarations 51
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<73> > rxGalapagosBridge_V_dout;
    sc_in< sc_logic > rxGalapagosBridge_V_empty_n;
    sc_out< sc_logic > rxGalapagosBridge_V_read;
    sc_in< sc_lv<17> > txStatus_V_V_dout;
    sc_in< sc_logic > txStatus_V_V_empty_n;
    sc_out< sc_logic > txStatus_V_V_read;
    sc_in< sc_lv<16> > sessionID_fifo_V_V_dout;
    sc_in< sc_logic > sessionID_fifo_V_V_empty_n;
    sc_out< sc_logic > sessionID_fifo_V_V_read;
    sc_in< sc_lv<16> > g2t_read_sid_V_V_dout;
    sc_in< sc_logic > g2t_read_sid_V_V_empty_n;
    sc_out< sc_logic > g2t_read_sid_V_V_read;
    sc_out< sc_lv<16> > g2t_write_sid_V_V_din;
    sc_in< sc_logic > g2t_write_sid_V_V_full_n;
    sc_out< sc_logic > g2t_write_sid_V_V_write;
    sc_out< sc_lv<8> > g2t_write_dest_V_V_din;
    sc_in< sc_logic > g2t_write_dest_V_V_full_n;
    sc_out< sc_logic > g2t_write_dest_V_V_write;
    sc_out< sc_lv<8> > g2t_read_dest_V_V_din;
    sc_in< sc_logic > g2t_read_dest_V_V_full_n;
    sc_out< sc_logic > g2t_read_dest_V_V_write;
    sc_out< sc_lv<73> > txData_V_din;
    sc_in< sc_logic > txData_V_full_n;
    sc_out< sc_logic > txData_V_write;
    sc_out< sc_lv<32> > txMetaData_V_din;
    sc_in< sc_logic > txMetaData_V_full_n;
    sc_out< sc_logic > txMetaData_V_write;
    sc_out< sc_lv<32> > ip_fifo_V_V_din;
    sc_in< sc_logic > ip_fifo_V_V_full_n;
    sc_out< sc_logic > ip_fifo_V_V_write;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_out< sc_lv<4> > state_out_V;
    sc_out< sc_logic > state_out_V_ap_vld;
    sc_out< sc_lv<64> > header_out_V;
    sc_out< sc_logic > header_out_V_ap_vld;
    sc_out< sc_lv<16> > size_out_V;
    sc_out< sc_logic > size_out_V_ap_vld;
    sc_out< sc_lv<16> > sessionID_out_V;
    sc_out< sc_logic > sessionID_out_V_ap_vld;
    sc_out< sc_lv<8> > ip_table_V_address0;
    sc_out< sc_logic > ip_table_V_ce0;
    sc_in< sc_lv<32> > ip_table_V_q0;


    // Module declarations
    galapagos_to_tcp_int(sc_module_name name);
    SC_HAS_PROCESS(galapagos_to_tcp_int);

    ~galapagos_to_tcp_int();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<4> > state_1_load_load_fu_305_p1;
    sc_signal< sc_lv<1> > grp_nbreadreq_fu_155_p3;
    sc_signal< bool > ap_predicate_op9_read_state1;
    sc_signal< sc_lv<1> > grp_nbreadreq_fu_169_p3;
    sc_signal< bool > ap_predicate_op14_read_state1;
    sc_signal< bool > ap_predicate_op21_read_state1;
    sc_signal< sc_lv<1> > tmp_17_nbreadreq_fu_183_p3;
    sc_signal< bool > ap_predicate_op28_read_state1;
    sc_signal< sc_lv<1> > tmp_16_nbreadreq_fu_197_p3;
    sc_signal< bool > ap_predicate_op32_read_state1;
    sc_signal< bool > ap_predicate_op43_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< sc_lv<4> > state_1_load_reg_522;
    sc_signal< sc_lv<1> > tmp_17_reg_552;
    sc_signal< bool > ap_predicate_op60_write_state2;
    sc_signal< sc_lv<1> > tmp_reg_580;
    sc_signal< bool > ap_predicate_op69_write_state2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< sc_lv<4> > state_1_load_reg_522_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_22_reg_531;
    sc_signal< sc_lv<1> > tmp_22_reg_531_pp0_iter1_reg;
    sc_signal< bool > ap_predicate_op87_write_state3;
    sc_signal< sc_lv<1> > tmp_16_reg_562;
    sc_signal< sc_lv<1> > tmp_16_reg_562_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_i_reg_571;
    sc_signal< sc_lv<1> > tmp_i_reg_571_pp0_iter1_reg;
    sc_signal< bool > ap_predicate_op108_write_state3;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<4> > state_1;
    sc_signal< sc_lv<64> > header_data_V;
    sc_signal< sc_lv<8> > dest_V;
    sc_signal< sc_lv<16> > sessionID_V;
    sc_signal< sc_lv<8> > header_keep_V;
    sc_signal< sc_lv<1> > header_last_V;
    sc_signal< sc_logic > rxGalapagosBridge_V_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > txStatus_V_V_blk_n;
    sc_signal< sc_logic > txMetaData_V_blk_n;
    sc_signal< sc_logic > txData_V_blk_n;
    sc_signal< sc_logic > g2t_read_dest_V_V_blk_n;
    sc_signal< sc_logic > g2t_read_sid_V_V_blk_n;
    sc_signal< sc_logic > ip_fifo_V_V_blk_n;
    sc_signal< sc_logic > sessionID_fifo_V_V_blk_n;
    sc_signal< sc_logic > g2t_write_sid_V_V_blk_n;
    sc_signal< sc_logic > g2t_write_dest_V_V_blk_n;
    sc_signal< sc_lv<8> > tmp_V_15_reg_526;
    sc_signal< sc_lv<73> > tmp_4_reg_535;
    sc_signal< sc_lv<73> > tmp_4_reg_535_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_last_V_1_fu_314_p3;
    sc_signal< sc_lv<16> > tmp_V_14_reg_556;
    sc_signal< sc_lv<16> > tmp_V_13_reg_566;
    sc_signal< sc_lv<1> > tmp_i_fu_380_p2;
    sc_signal< sc_lv<1> > tmp_reg_580_pp0_iter1_reg;
    sc_signal< sc_lv<64> > p_Val2_1_fu_401_p1;
    sc_signal< sc_lv<64> > p_Val2_1_reg_584;
    sc_signal< sc_lv<64> > p_Val2_1_reg_584_pp0_iter1_reg;
    sc_signal< sc_lv<8> > tmp_keep_V_4_load_ne_reg_590;
    sc_signal< sc_lv<8> > tmp_V_reg_595;
    sc_signal< sc_lv<16> > txMetaDataWord_sessi_reg_600;
    sc_signal< sc_lv<32> > tmp_V_18_reg_607;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<2> > ap_phi_mux_storemerge2_i_phi_fu_289_p4;
    sc_signal< sc_lv<2> > ap_phi_reg_pp0_iter0_storemerge2_i_reg_286;
    sc_signal< sc_lv<64> > tmp_21_i_fu_386_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<73> > tmp_2_fu_487_p4;
    sc_signal< sc_lv<32> > tmp_3_fu_471_p3;
    sc_signal< sc_lv<32> > tmp_1_fu_509_p3;
    sc_signal< sc_lv<4> > storemerge_i_fu_328_p3;
    sc_signal< sc_lv<4> > storemerge1_cast_i_c_fu_354_p3;
    sc_signal< sc_lv<4> > storemerge2_cast_i_fu_391_p1;
    sc_signal< sc_lv<16> > size_V_3_fu_466_p1;
    sc_signal< sc_lv<16> > size_V_1_fu_502_p2;
    sc_signal< sc_lv<1> > grp_fu_297_p3;
    sc_signal< sc_lv<16> > size_V_fu_498_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_520;
    sc_signal< bool > ap_condition_376;
    sc_signal< bool > ap_condition_403;
    sc_signal< bool > ap_condition_214;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_48;
    static const sc_lv<16> ap_const_lv16_3E8;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_47;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<16> ap_const_lv16_8;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_condition_214();
    void thread_ap_condition_376();
    void thread_ap_condition_403();
    void thread_ap_condition_520();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_phi_mux_storemerge2_i_phi_fu_289_p4();
    void thread_ap_phi_reg_pp0_iter0_storemerge2_i_reg_286();
    void thread_ap_predicate_op108_write_state3();
    void thread_ap_predicate_op14_read_state1();
    void thread_ap_predicate_op21_read_state1();
    void thread_ap_predicate_op28_read_state1();
    void thread_ap_predicate_op32_read_state1();
    void thread_ap_predicate_op43_read_state1();
    void thread_ap_predicate_op60_write_state2();
    void thread_ap_predicate_op69_write_state2();
    void thread_ap_predicate_op87_write_state3();
    void thread_ap_predicate_op9_read_state1();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_g2t_read_dest_V_V_blk_n();
    void thread_g2t_read_dest_V_V_din();
    void thread_g2t_read_dest_V_V_write();
    void thread_g2t_read_sid_V_V_blk_n();
    void thread_g2t_read_sid_V_V_read();
    void thread_g2t_write_dest_V_V_blk_n();
    void thread_g2t_write_dest_V_V_din();
    void thread_g2t_write_dest_V_V_write();
    void thread_g2t_write_sid_V_V_blk_n();
    void thread_g2t_write_sid_V_V_din();
    void thread_g2t_write_sid_V_V_write();
    void thread_grp_fu_297_p3();
    void thread_grp_nbreadreq_fu_155_p3();
    void thread_grp_nbreadreq_fu_169_p3();
    void thread_header_out_V();
    void thread_header_out_V_ap_vld();
    void thread_internal_ap_ready();
    void thread_ip_fifo_V_V_blk_n();
    void thread_ip_fifo_V_V_din();
    void thread_ip_fifo_V_V_write();
    void thread_ip_table_V_address0();
    void thread_ip_table_V_ce0();
    void thread_p_Val2_1_fu_401_p1();
    void thread_real_start();
    void thread_rxGalapagosBridge_V_blk_n();
    void thread_rxGalapagosBridge_V_read();
    void thread_sessionID_fifo_V_V_blk_n();
    void thread_sessionID_fifo_V_V_read();
    void thread_sessionID_out_V();
    void thread_sessionID_out_V_ap_vld();
    void thread_size_V_1_fu_502_p2();
    void thread_size_V_3_fu_466_p1();
    void thread_size_V_fu_498_p1();
    void thread_size_out_V();
    void thread_size_out_V_ap_vld();
    void thread_start_out();
    void thread_start_write();
    void thread_state_1_load_load_fu_305_p1();
    void thread_state_out_V();
    void thread_state_out_V_ap_vld();
    void thread_storemerge1_cast_i_c_fu_354_p3();
    void thread_storemerge2_cast_i_fu_391_p1();
    void thread_storemerge_i_fu_328_p3();
    void thread_tmp_16_nbreadreq_fu_197_p3();
    void thread_tmp_17_nbreadreq_fu_183_p3();
    void thread_tmp_1_fu_509_p3();
    void thread_tmp_21_i_fu_386_p1();
    void thread_tmp_2_fu_487_p4();
    void thread_tmp_3_fu_471_p3();
    void thread_tmp_i_fu_380_p2();
    void thread_tmp_last_V_1_fu_314_p3();
    void thread_txData_V_blk_n();
    void thread_txData_V_din();
    void thread_txData_V_write();
    void thread_txMetaData_V_blk_n();
    void thread_txMetaData_V_din();
    void thread_txMetaData_V_write();
    void thread_txStatus_V_V_blk_n();
    void thread_txStatus_V_V_read();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
