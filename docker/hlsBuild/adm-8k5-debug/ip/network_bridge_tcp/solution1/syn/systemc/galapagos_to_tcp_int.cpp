// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "galapagos_to_tcp_int.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic galapagos_to_tcp_int::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic galapagos_to_tcp_int::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> galapagos_to_tcp_int::ap_ST_fsm_pp0_stage0 = "1";
const bool galapagos_to_tcp_int::ap_const_boolean_1 = true;
const sc_lv<32> galapagos_to_tcp_int::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<4> galapagos_to_tcp_int::ap_const_lv4_8 = "1000";
const sc_lv<1> galapagos_to_tcp_int::ap_const_lv1_1 = "1";
const sc_lv<4> galapagos_to_tcp_int::ap_const_lv4_7 = "111";
const sc_lv<4> galapagos_to_tcp_int::ap_const_lv4_4 = "100";
const sc_lv<4> galapagos_to_tcp_int::ap_const_lv4_2 = "10";
const sc_lv<4> galapagos_to_tcp_int::ap_const_lv4_1 = "1";
const sc_lv<4> galapagos_to_tcp_int::ap_const_lv4_0 = "0000";
const sc_lv<4> galapagos_to_tcp_int::ap_const_lv4_6 = "110";
const sc_lv<4> galapagos_to_tcp_int::ap_const_lv4_5 = "101";
const sc_lv<4> galapagos_to_tcp_int::ap_const_lv4_3 = "11";
const bool galapagos_to_tcp_int::ap_const_boolean_0 = false;
const sc_lv<1> galapagos_to_tcp_int::ap_const_lv1_0 = "0";
const sc_lv<2> galapagos_to_tcp_int::ap_const_lv2_2 = "10";
const sc_lv<2> galapagos_to_tcp_int::ap_const_lv2_3 = "11";
const sc_lv<32> galapagos_to_tcp_int::ap_const_lv32_10 = "10000";
const sc_lv<32> galapagos_to_tcp_int::ap_const_lv32_48 = "1001000";
const sc_lv<16> galapagos_to_tcp_int::ap_const_lv16_3E8 = "1111101000";
const sc_lv<32> galapagos_to_tcp_int::ap_const_lv32_40 = "1000000";
const sc_lv<32> galapagos_to_tcp_int::ap_const_lv32_47 = "1000111";
const sc_lv<32> galapagos_to_tcp_int::ap_const_lv32_18 = "11000";
const sc_lv<32> galapagos_to_tcp_int::ap_const_lv32_1F = "11111";
const sc_lv<16> galapagos_to_tcp_int::ap_const_lv16_8 = "1000";

galapagos_to_tcp_int::galapagos_to_tcp_int(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( rxGalapagosBridge_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( txStatus_V_V_empty_n );
    sensitive << ( ap_predicate_op14_read_state1 );
    sensitive << ( ap_predicate_op21_read_state1 );
    sensitive << ( sessionID_fifo_V_V_empty_n );
    sensitive << ( ap_predicate_op28_read_state1 );
    sensitive << ( g2t_read_sid_V_V_empty_n );
    sensitive << ( ap_predicate_op32_read_state1 );
    sensitive << ( ap_predicate_op43_read_state1 );
    sensitive << ( g2t_write_sid_V_V_full_n );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( g2t_write_dest_V_V_full_n );
    sensitive << ( g2t_read_dest_V_V_full_n );
    sensitive << ( ap_predicate_op69_write_state2 );
    sensitive << ( txData_V_full_n );
    sensitive << ( state_1_load_reg_522_pp0_iter1_reg );
    sensitive << ( ap_predicate_op87_write_state3 );
    sensitive << ( txMetaData_V_full_n );
    sensitive << ( ip_fifo_V_V_full_n );
    sensitive << ( ap_predicate_op108_write_state3 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( rxGalapagosBridge_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( txStatus_V_V_empty_n );
    sensitive << ( ap_predicate_op14_read_state1 );
    sensitive << ( ap_predicate_op21_read_state1 );
    sensitive << ( sessionID_fifo_V_V_empty_n );
    sensitive << ( ap_predicate_op28_read_state1 );
    sensitive << ( g2t_read_sid_V_V_empty_n );
    sensitive << ( ap_predicate_op32_read_state1 );
    sensitive << ( ap_predicate_op43_read_state1 );
    sensitive << ( g2t_write_sid_V_V_full_n );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( g2t_write_dest_V_V_full_n );
    sensitive << ( g2t_read_dest_V_V_full_n );
    sensitive << ( ap_predicate_op69_write_state2 );
    sensitive << ( txData_V_full_n );
    sensitive << ( state_1_load_reg_522_pp0_iter1_reg );
    sensitive << ( ap_predicate_op87_write_state3 );
    sensitive << ( txMetaData_V_full_n );
    sensitive << ( ip_fifo_V_V_full_n );
    sensitive << ( ap_predicate_op108_write_state3 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( rxGalapagosBridge_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( txStatus_V_V_empty_n );
    sensitive << ( ap_predicate_op14_read_state1 );
    sensitive << ( ap_predicate_op21_read_state1 );
    sensitive << ( sessionID_fifo_V_V_empty_n );
    sensitive << ( ap_predicate_op28_read_state1 );
    sensitive << ( g2t_read_sid_V_V_empty_n );
    sensitive << ( ap_predicate_op32_read_state1 );
    sensitive << ( ap_predicate_op43_read_state1 );
    sensitive << ( g2t_write_sid_V_V_full_n );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( g2t_write_dest_V_V_full_n );
    sensitive << ( g2t_read_dest_V_V_full_n );
    sensitive << ( ap_predicate_op69_write_state2 );
    sensitive << ( txData_V_full_n );
    sensitive << ( state_1_load_reg_522_pp0_iter1_reg );
    sensitive << ( ap_predicate_op87_write_state3 );
    sensitive << ( txMetaData_V_full_n );
    sensitive << ( ip_fifo_V_V_full_n );
    sensitive << ( ap_predicate_op108_write_state3 );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( rxGalapagosBridge_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( txStatus_V_V_empty_n );
    sensitive << ( ap_predicate_op14_read_state1 );
    sensitive << ( ap_predicate_op21_read_state1 );
    sensitive << ( sessionID_fifo_V_V_empty_n );
    sensitive << ( ap_predicate_op28_read_state1 );
    sensitive << ( g2t_read_sid_V_V_empty_n );
    sensitive << ( ap_predicate_op32_read_state1 );
    sensitive << ( ap_predicate_op43_read_state1 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);
    sensitive << ( g2t_write_sid_V_V_full_n );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( g2t_write_dest_V_V_full_n );
    sensitive << ( g2t_read_dest_V_V_full_n );
    sensitive << ( ap_predicate_op69_write_state2 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);
    sensitive << ( txData_V_full_n );
    sensitive << ( state_1_load_reg_522_pp0_iter1_reg );
    sensitive << ( ap_predicate_op87_write_state3 );
    sensitive << ( txMetaData_V_full_n );
    sensitive << ( ip_fifo_V_V_full_n );
    sensitive << ( ap_predicate_op108_write_state3 );

    SC_METHOD(thread_ap_condition_214);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_376);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_403);
    sensitive << ( grp_nbreadreq_fu_155_p3 );
    sensitive << ( state_1 );
    sensitive << ( tmp_last_V_1_fu_314_p3 );

    SC_METHOD(thread_ap_condition_520);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_16_nbreadreq_fu_197_p3 );
    sensitive << ( state_1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( real_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp0_0to1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_storemerge2_i_phi_fu_289_p4);
    sensitive << ( tmp_i_fu_380_p2 );
    sensitive << ( ap_phi_reg_pp0_iter0_storemerge2_i_reg_286 );
    sensitive << ( ap_condition_520 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_storemerge2_i_reg_286);

    SC_METHOD(thread_ap_predicate_op108_write_state3);
    sensitive << ( state_1_load_reg_522_pp0_iter1_reg );
    sensitive << ( tmp_16_reg_562_pp0_iter1_reg );
    sensitive << ( tmp_i_reg_571_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op14_read_state1);
    sensitive << ( grp_nbreadreq_fu_169_p3 );
    sensitive << ( state_1 );

    SC_METHOD(thread_ap_predicate_op21_read_state1);
    sensitive << ( grp_nbreadreq_fu_169_p3 );
    sensitive << ( state_1 );

    SC_METHOD(thread_ap_predicate_op28_read_state1);
    sensitive << ( tmp_17_nbreadreq_fu_183_p3 );
    sensitive << ( state_1 );

    SC_METHOD(thread_ap_predicate_op32_read_state1);
    sensitive << ( tmp_16_nbreadreq_fu_197_p3 );
    sensitive << ( state_1 );

    SC_METHOD(thread_ap_predicate_op43_read_state1);
    sensitive << ( grp_nbreadreq_fu_155_p3 );
    sensitive << ( state_1 );

    SC_METHOD(thread_ap_predicate_op60_write_state2);
    sensitive << ( state_1_load_reg_522 );
    sensitive << ( tmp_17_reg_552 );

    SC_METHOD(thread_ap_predicate_op69_write_state2);
    sensitive << ( state_1_load_reg_522 );
    sensitive << ( tmp_reg_580 );

    SC_METHOD(thread_ap_predicate_op87_write_state3);
    sensitive << ( state_1_load_reg_522_pp0_iter1_reg );
    sensitive << ( tmp_22_reg_531_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op9_read_state1);
    sensitive << ( grp_nbreadreq_fu_155_p3 );
    sensitive << ( state_1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( real_start );
    sensitive << ( ap_idle_pp0_0to1 );

    SC_METHOD(thread_g2t_read_dest_V_V_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( g2t_read_dest_V_V_full_n );
    sensitive << ( ap_predicate_op69_write_state2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_g2t_read_dest_V_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op69_write_state2 );
    sensitive << ( tmp_V_reg_595 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_g2t_read_dest_V_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op69_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_g2t_read_sid_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( g2t_read_sid_V_V_empty_n );
    sensitive << ( ap_predicate_op32_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_g2t_read_sid_V_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op32_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_g2t_write_dest_V_V_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( g2t_write_dest_V_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_g2t_write_dest_V_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( tmp_V_15_reg_526 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_g2t_write_dest_V_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_g2t_write_sid_V_V_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( g2t_write_sid_V_V_full_n );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_g2t_write_sid_V_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( tmp_V_14_reg_556 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_g2t_write_sid_V_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_297_p3);
    sensitive << ( txStatus_V_V_dout );

    SC_METHOD(thread_grp_nbreadreq_fu_155_p3);
    sensitive << ( rxGalapagosBridge_V_empty_n );

    SC_METHOD(thread_grp_nbreadreq_fu_169_p3);
    sensitive << ( txStatus_V_V_empty_n );

    SC_METHOD(thread_header_out_V);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( state_1_load_reg_522_pp0_iter1_reg );
    sensitive << ( tmp_reg_580_pp0_iter1_reg );
    sensitive << ( p_Val2_1_reg_584_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_header_out_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( state_1_load_reg_522_pp0_iter1_reg );
    sensitive << ( tmp_reg_580_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ip_fifo_V_V_blk_n);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ip_fifo_V_V_full_n );
    sensitive << ( ap_predicate_op108_write_state3 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ip_fifo_V_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op108_write_state3 );
    sensitive << ( tmp_V_18_reg_607 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ip_fifo_V_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op108_write_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ip_table_V_address0);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_21_i_fu_386_p1 );

    SC_METHOD(thread_ip_table_V_ce0);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_Val2_1_fu_401_p1);
    sensitive << ( rxGalapagosBridge_V_dout );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_rxGalapagosBridge_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rxGalapagosBridge_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( ap_predicate_op43_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_rxGalapagosBridge_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( ap_predicate_op43_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sessionID_fifo_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( sessionID_fifo_V_V_empty_n );
    sensitive << ( ap_predicate_op28_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_sessionID_fifo_V_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op28_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sessionID_out_V);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( state_1_load_reg_522_pp0_iter1_reg );
    sensitive << ( txMetaDataWord_sessi_reg_600 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_sessionID_out_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( state_1_load_reg_522_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_size_V_1_fu_502_p2);
    sensitive << ( size_V_fu_498_p1 );

    SC_METHOD(thread_size_V_3_fu_466_p1);
    sensitive << ( header_data_V );

    SC_METHOD(thread_size_V_fu_498_p1);
    sensitive << ( header_data_V );

    SC_METHOD(thread_size_out_V);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( state_1_load_reg_522_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( size_V_3_fu_466_p1 );
    sensitive << ( size_V_1_fu_502_p2 );

    SC_METHOD(thread_size_out_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( state_1_load_reg_522_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_state_1_load_load_fu_305_p1);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( state_1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_state_out_V);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( state_1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_state_out_V_ap_vld);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_storemerge1_cast_i_c_fu_354_p3);
    sensitive << ( grp_fu_297_p3 );

    SC_METHOD(thread_storemerge2_cast_i_fu_391_p1);
    sensitive << ( ap_phi_mux_storemerge2_i_phi_fu_289_p4 );

    SC_METHOD(thread_storemerge_i_fu_328_p3);
    sensitive << ( grp_fu_297_p3 );

    SC_METHOD(thread_tmp_16_nbreadreq_fu_197_p3);
    sensitive << ( g2t_read_sid_V_V_empty_n );

    SC_METHOD(thread_tmp_17_nbreadreq_fu_183_p3);
    sensitive << ( sessionID_fifo_V_V_empty_n );

    SC_METHOD(thread_tmp_1_fu_509_p3);
    sensitive << ( txMetaDataWord_sessi_reg_600 );

    SC_METHOD(thread_tmp_21_i_fu_386_p1);
    sensitive << ( dest_V );

    SC_METHOD(thread_tmp_2_fu_487_p4);
    sensitive << ( header_data_V );
    sensitive << ( header_keep_V );
    sensitive << ( header_last_V );

    SC_METHOD(thread_tmp_3_fu_471_p3);
    sensitive << ( txMetaDataWord_sessi_reg_600 );
    sensitive << ( size_V_3_fu_466_p1 );

    SC_METHOD(thread_tmp_i_fu_380_p2);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( g2t_read_sid_V_V_dout );
    sensitive << ( ap_predicate_op32_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_last_V_1_fu_314_p3);
    sensitive << ( rxGalapagosBridge_V_dout );

    SC_METHOD(thread_txData_V_blk_n);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( txData_V_full_n );
    sensitive << ( state_1_load_reg_522_pp0_iter1_reg );
    sensitive << ( ap_predicate_op87_write_state3 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_txData_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( state_1_load_reg_522_pp0_iter1_reg );
    sensitive << ( ap_predicate_op87_write_state3 );
    sensitive << ( tmp_4_reg_535_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_2_fu_487_p4 );

    SC_METHOD(thread_txData_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( state_1_load_reg_522_pp0_iter1_reg );
    sensitive << ( ap_predicate_op87_write_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_txMetaData_V_blk_n);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( state_1_load_reg_522_pp0_iter1_reg );
    sensitive << ( txMetaData_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_txMetaData_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( state_1_load_reg_522_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_3_fu_471_p3 );
    sensitive << ( tmp_1_fu_509_p3 );

    SC_METHOD(thread_txMetaData_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( state_1_load_reg_522_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_txStatus_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( txStatus_V_V_empty_n );
    sensitive << ( ap_predicate_op14_read_state1 );
    sensitive << ( ap_predicate_op21_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_txStatus_V_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op14_read_state1 );
    sensitive << ( ap_predicate_op21_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    state_1 = "0000";
    header_data_V = "0000000000000000000000000000000000000000000000000000000000000000";
    dest_V = "00000000";
    sessionID_V = "0000000000000000";
    header_keep_V = "00000000";
    header_last_V = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "galapagos_to_tcp_int_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, rxGalapagosBridge_V_dout, "(port)rxGalapagosBridge_V_dout");
    sc_trace(mVcdFile, rxGalapagosBridge_V_empty_n, "(port)rxGalapagosBridge_V_empty_n");
    sc_trace(mVcdFile, rxGalapagosBridge_V_read, "(port)rxGalapagosBridge_V_read");
    sc_trace(mVcdFile, txStatus_V_V_dout, "(port)txStatus_V_V_dout");
    sc_trace(mVcdFile, txStatus_V_V_empty_n, "(port)txStatus_V_V_empty_n");
    sc_trace(mVcdFile, txStatus_V_V_read, "(port)txStatus_V_V_read");
    sc_trace(mVcdFile, sessionID_fifo_V_V_dout, "(port)sessionID_fifo_V_V_dout");
    sc_trace(mVcdFile, sessionID_fifo_V_V_empty_n, "(port)sessionID_fifo_V_V_empty_n");
    sc_trace(mVcdFile, sessionID_fifo_V_V_read, "(port)sessionID_fifo_V_V_read");
    sc_trace(mVcdFile, g2t_read_sid_V_V_dout, "(port)g2t_read_sid_V_V_dout");
    sc_trace(mVcdFile, g2t_read_sid_V_V_empty_n, "(port)g2t_read_sid_V_V_empty_n");
    sc_trace(mVcdFile, g2t_read_sid_V_V_read, "(port)g2t_read_sid_V_V_read");
    sc_trace(mVcdFile, g2t_write_sid_V_V_din, "(port)g2t_write_sid_V_V_din");
    sc_trace(mVcdFile, g2t_write_sid_V_V_full_n, "(port)g2t_write_sid_V_V_full_n");
    sc_trace(mVcdFile, g2t_write_sid_V_V_write, "(port)g2t_write_sid_V_V_write");
    sc_trace(mVcdFile, g2t_write_dest_V_V_din, "(port)g2t_write_dest_V_V_din");
    sc_trace(mVcdFile, g2t_write_dest_V_V_full_n, "(port)g2t_write_dest_V_V_full_n");
    sc_trace(mVcdFile, g2t_write_dest_V_V_write, "(port)g2t_write_dest_V_V_write");
    sc_trace(mVcdFile, g2t_read_dest_V_V_din, "(port)g2t_read_dest_V_V_din");
    sc_trace(mVcdFile, g2t_read_dest_V_V_full_n, "(port)g2t_read_dest_V_V_full_n");
    sc_trace(mVcdFile, g2t_read_dest_V_V_write, "(port)g2t_read_dest_V_V_write");
    sc_trace(mVcdFile, txData_V_din, "(port)txData_V_din");
    sc_trace(mVcdFile, txData_V_full_n, "(port)txData_V_full_n");
    sc_trace(mVcdFile, txData_V_write, "(port)txData_V_write");
    sc_trace(mVcdFile, txMetaData_V_din, "(port)txMetaData_V_din");
    sc_trace(mVcdFile, txMetaData_V_full_n, "(port)txMetaData_V_full_n");
    sc_trace(mVcdFile, txMetaData_V_write, "(port)txMetaData_V_write");
    sc_trace(mVcdFile, ip_fifo_V_V_din, "(port)ip_fifo_V_V_din");
    sc_trace(mVcdFile, ip_fifo_V_V_full_n, "(port)ip_fifo_V_V_full_n");
    sc_trace(mVcdFile, ip_fifo_V_V_write, "(port)ip_fifo_V_V_write");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, state_out_V, "(port)state_out_V");
    sc_trace(mVcdFile, state_out_V_ap_vld, "(port)state_out_V_ap_vld");
    sc_trace(mVcdFile, header_out_V, "(port)header_out_V");
    sc_trace(mVcdFile, header_out_V_ap_vld, "(port)header_out_V_ap_vld");
    sc_trace(mVcdFile, size_out_V, "(port)size_out_V");
    sc_trace(mVcdFile, size_out_V_ap_vld, "(port)size_out_V_ap_vld");
    sc_trace(mVcdFile, sessionID_out_V, "(port)sessionID_out_V");
    sc_trace(mVcdFile, sessionID_out_V_ap_vld, "(port)sessionID_out_V_ap_vld");
    sc_trace(mVcdFile, ip_table_V_address0, "(port)ip_table_V_address0");
    sc_trace(mVcdFile, ip_table_V_ce0, "(port)ip_table_V_ce0");
    sc_trace(mVcdFile, ip_table_V_q0, "(port)ip_table_V_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, state_1_load_load_fu_305_p1, "state_1_load_load_fu_305_p1");
    sc_trace(mVcdFile, grp_nbreadreq_fu_155_p3, "grp_nbreadreq_fu_155_p3");
    sc_trace(mVcdFile, ap_predicate_op9_read_state1, "ap_predicate_op9_read_state1");
    sc_trace(mVcdFile, grp_nbreadreq_fu_169_p3, "grp_nbreadreq_fu_169_p3");
    sc_trace(mVcdFile, ap_predicate_op14_read_state1, "ap_predicate_op14_read_state1");
    sc_trace(mVcdFile, ap_predicate_op21_read_state1, "ap_predicate_op21_read_state1");
    sc_trace(mVcdFile, tmp_17_nbreadreq_fu_183_p3, "tmp_17_nbreadreq_fu_183_p3");
    sc_trace(mVcdFile, ap_predicate_op28_read_state1, "ap_predicate_op28_read_state1");
    sc_trace(mVcdFile, tmp_16_nbreadreq_fu_197_p3, "tmp_16_nbreadreq_fu_197_p3");
    sc_trace(mVcdFile, ap_predicate_op32_read_state1, "ap_predicate_op32_read_state1");
    sc_trace(mVcdFile, ap_predicate_op43_read_state1, "ap_predicate_op43_read_state1");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, state_1_load_reg_522, "state_1_load_reg_522");
    sc_trace(mVcdFile, tmp_17_reg_552, "tmp_17_reg_552");
    sc_trace(mVcdFile, ap_predicate_op60_write_state2, "ap_predicate_op60_write_state2");
    sc_trace(mVcdFile, tmp_reg_580, "tmp_reg_580");
    sc_trace(mVcdFile, ap_predicate_op69_write_state2, "ap_predicate_op69_write_state2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, state_1_load_reg_522_pp0_iter1_reg, "state_1_load_reg_522_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_22_reg_531, "tmp_22_reg_531");
    sc_trace(mVcdFile, tmp_22_reg_531_pp0_iter1_reg, "tmp_22_reg_531_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_predicate_op87_write_state3, "ap_predicate_op87_write_state3");
    sc_trace(mVcdFile, tmp_16_reg_562, "tmp_16_reg_562");
    sc_trace(mVcdFile, tmp_16_reg_562_pp0_iter1_reg, "tmp_16_reg_562_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_i_reg_571, "tmp_i_reg_571");
    sc_trace(mVcdFile, tmp_i_reg_571_pp0_iter1_reg, "tmp_i_reg_571_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_predicate_op108_write_state3, "ap_predicate_op108_write_state3");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, state_1, "state_1");
    sc_trace(mVcdFile, header_data_V, "header_data_V");
    sc_trace(mVcdFile, dest_V, "dest_V");
    sc_trace(mVcdFile, sessionID_V, "sessionID_V");
    sc_trace(mVcdFile, header_keep_V, "header_keep_V");
    sc_trace(mVcdFile, header_last_V, "header_last_V");
    sc_trace(mVcdFile, rxGalapagosBridge_V_blk_n, "rxGalapagosBridge_V_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, txStatus_V_V_blk_n, "txStatus_V_V_blk_n");
    sc_trace(mVcdFile, txMetaData_V_blk_n, "txMetaData_V_blk_n");
    sc_trace(mVcdFile, txData_V_blk_n, "txData_V_blk_n");
    sc_trace(mVcdFile, g2t_read_dest_V_V_blk_n, "g2t_read_dest_V_V_blk_n");
    sc_trace(mVcdFile, g2t_read_sid_V_V_blk_n, "g2t_read_sid_V_V_blk_n");
    sc_trace(mVcdFile, ip_fifo_V_V_blk_n, "ip_fifo_V_V_blk_n");
    sc_trace(mVcdFile, sessionID_fifo_V_V_blk_n, "sessionID_fifo_V_V_blk_n");
    sc_trace(mVcdFile, g2t_write_sid_V_V_blk_n, "g2t_write_sid_V_V_blk_n");
    sc_trace(mVcdFile, g2t_write_dest_V_V_blk_n, "g2t_write_dest_V_V_blk_n");
    sc_trace(mVcdFile, tmp_V_15_reg_526, "tmp_V_15_reg_526");
    sc_trace(mVcdFile, tmp_4_reg_535, "tmp_4_reg_535");
    sc_trace(mVcdFile, tmp_4_reg_535_pp0_iter1_reg, "tmp_4_reg_535_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_last_V_1_fu_314_p3, "tmp_last_V_1_fu_314_p3");
    sc_trace(mVcdFile, tmp_V_14_reg_556, "tmp_V_14_reg_556");
    sc_trace(mVcdFile, tmp_V_13_reg_566, "tmp_V_13_reg_566");
    sc_trace(mVcdFile, tmp_i_fu_380_p2, "tmp_i_fu_380_p2");
    sc_trace(mVcdFile, tmp_reg_580_pp0_iter1_reg, "tmp_reg_580_pp0_iter1_reg");
    sc_trace(mVcdFile, p_Val2_1_fu_401_p1, "p_Val2_1_fu_401_p1");
    sc_trace(mVcdFile, p_Val2_1_reg_584, "p_Val2_1_reg_584");
    sc_trace(mVcdFile, p_Val2_1_reg_584_pp0_iter1_reg, "p_Val2_1_reg_584_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_keep_V_4_load_ne_reg_590, "tmp_keep_V_4_load_ne_reg_590");
    sc_trace(mVcdFile, tmp_V_reg_595, "tmp_V_reg_595");
    sc_trace(mVcdFile, txMetaDataWord_sessi_reg_600, "txMetaDataWord_sessi_reg_600");
    sc_trace(mVcdFile, tmp_V_18_reg_607, "tmp_V_18_reg_607");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_phi_mux_storemerge2_i_phi_fu_289_p4, "ap_phi_mux_storemerge2_i_phi_fu_289_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_storemerge2_i_reg_286, "ap_phi_reg_pp0_iter0_storemerge2_i_reg_286");
    sc_trace(mVcdFile, tmp_21_i_fu_386_p1, "tmp_21_i_fu_386_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_2_fu_487_p4, "tmp_2_fu_487_p4");
    sc_trace(mVcdFile, tmp_3_fu_471_p3, "tmp_3_fu_471_p3");
    sc_trace(mVcdFile, tmp_1_fu_509_p3, "tmp_1_fu_509_p3");
    sc_trace(mVcdFile, storemerge_i_fu_328_p3, "storemerge_i_fu_328_p3");
    sc_trace(mVcdFile, storemerge1_cast_i_c_fu_354_p3, "storemerge1_cast_i_c_fu_354_p3");
    sc_trace(mVcdFile, storemerge2_cast_i_fu_391_p1, "storemerge2_cast_i_fu_391_p1");
    sc_trace(mVcdFile, size_V_3_fu_466_p1, "size_V_3_fu_466_p1");
    sc_trace(mVcdFile, size_V_1_fu_502_p2, "size_V_1_fu_502_p2");
    sc_trace(mVcdFile, grp_fu_297_p3, "grp_fu_297_p3");
    sc_trace(mVcdFile, size_V_fu_498_p1, "size_V_fu_498_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to1, "ap_idle_pp0_0to1");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_520, "ap_condition_520");
    sc_trace(mVcdFile, ap_condition_376, "ap_condition_376");
    sc_trace(mVcdFile, ap_condition_403, "ap_condition_403");
    sc_trace(mVcdFile, ap_condition_214, "ap_condition_214");
#endif

    }
}

galapagos_to_tcp_int::~galapagos_to_tcp_int() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void galapagos_to_tcp_int::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
            ap_enable_reg_pp0_iter1 = real_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_376.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,4,4>(ap_const_lv4_1, state_1_load_reg_522.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_562.read()))) {
            sessionID_V = tmp_V_13_reg_566.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state2.read())) {
            sessionID_V = tmp_V_14_reg_556.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_214.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_read_state1.read())) {
            state_1 = ap_const_lv4_1;
        } else if ((esl_seteq<1,4,4>(state_1.read(), ap_const_lv4_1) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_nbreadreq_fu_197_p3.read()))) {
            state_1 = storemerge2_cast_i_fu_391_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_read_state1.read())) {
            state_1 = ap_const_lv4_3;
        } else if (esl_seteq<1,4,4>(state_1_load_load_fu_305_p1.read(), ap_const_lv4_3)) {
            state_1 = ap_const_lv4_4;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op21_read_state1.read())) {
            state_1 = storemerge1_cast_i_c_fu_354_p3.read();
        } else if (esl_seteq<1,4,4>(state_1_load_load_fu_305_p1.read(), ap_const_lv4_5)) {
            state_1 = ap_const_lv4_6;
        } else if (esl_seteq<1,4,4>(state_1_load_load_fu_305_p1.read(), ap_const_lv4_6)) {
            state_1 = ap_const_lv4_7;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) {
            state_1 = storemerge_i_fu_328_p3.read();
        } else if (esl_seteq<1,1,1>(ap_condition_403.read(), ap_const_boolean_1)) {
            state_1 = ap_const_lv4_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_read_state1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dest_V = rxGalapagosBridge_V_dout.read().range(31, 24);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,4,4>(ap_const_lv4_0, state_1_load_reg_522_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_580_pp0_iter1_reg.read()))) {
        header_data_V = p_Val2_1_reg_584_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op69_write_state2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        header_keep_V = tmp_keep_V_4_load_ne_reg_590.read();
        header_last_V = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_read_state1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_Val2_1_reg_584 = p_Val2_1_fu_401_p1.read();
        tmp_V_reg_595 = rxGalapagosBridge_V_dout.read().range(31, 24);
        tmp_keep_V_4_load_ne_reg_590 = rxGalapagosBridge_V_dout.read().range(71, 64);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_Val2_1_reg_584_pp0_iter1_reg = p_Val2_1_reg_584.read();
        state_1_load_reg_522 = state_1.read();
        state_1_load_reg_522_pp0_iter1_reg = state_1_load_reg_522.read();
        tmp_16_reg_562_pp0_iter1_reg = tmp_16_reg_562.read();
        tmp_22_reg_531_pp0_iter1_reg = tmp_22_reg_531.read();
        tmp_4_reg_535_pp0_iter1_reg = tmp_4_reg_535.read();
        tmp_V_15_reg_526 = dest_V.read();
        tmp_i_reg_571_pp0_iter1_reg = tmp_i_reg_571.read();
        tmp_reg_580_pp0_iter1_reg = tmp_reg_580.read();
        txMetaDataWord_sessi_reg_600 = sessionID_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,4,4>(state_1.read(), ap_const_lv4_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_16_reg_562 =  (sc_lv<1>) (g2t_read_sid_V_V_empty_n.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,4,4>(state_1.read(), ap_const_lv4_2) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_17_reg_552 =  (sc_lv<1>) (sessionID_fifo_V_V_empty_n.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && esl_seteq<1,4,4>(state_1.read(), ap_const_lv4_8) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_22_reg_531 =  (sc_lv<1>) (rxGalapagosBridge_V_empty_n.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op9_read_state1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_4_reg_535 = rxGalapagosBridge_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_V_13_reg_566 = g2t_read_sid_V_V_dout.read();
        tmp_i_reg_571 = tmp_i_fu_380_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_read_state1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_V_14_reg_556 = sessionID_fifo_V_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,4,4>(ap_const_lv4_1, state_1_load_reg_522.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_562.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_reg_571.read()))) {
        tmp_V_18_reg_607 = ip_table_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && esl_seteq<1,4,4>(state_1.read(), ap_const_lv4_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_reg_580 =  (sc_lv<1>) (rxGalapagosBridge_V_empty_n.read());
    }
}

void galapagos_to_tcp_int::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void galapagos_to_tcp_int::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void galapagos_to_tcp_int::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
  (esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rxGalapagosBridge_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op9_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, txStatus_V_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, txStatus_V_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op21_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sessionID_fifo_V_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, g2t_read_sid_V_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rxGalapagosBridge_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, g2t_write_sid_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state2.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, g2t_write_dest_V_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, g2t_read_dest_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op69_write_state2.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || (((esl_seteq<1,1,1>(ap_const_logic_0, txData_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op87_write_state3.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, txMetaData_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_6)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, txData_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_5)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, txMetaData_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_3)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, ip_fifo_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op108_write_state3.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())));
}

void galapagos_to_tcp_int::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
  (esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rxGalapagosBridge_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op9_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, txStatus_V_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, txStatus_V_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op21_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sessionID_fifo_V_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, g2t_read_sid_V_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rxGalapagosBridge_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, g2t_write_sid_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state2.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, g2t_write_dest_V_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, g2t_read_dest_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op69_write_state2.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || (((esl_seteq<1,1,1>(ap_const_logic_0, txData_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op87_write_state3.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, txMetaData_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_6)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, txData_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_5)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, txMetaData_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_3)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, ip_fifo_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op108_write_state3.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())));
}

void galapagos_to_tcp_int::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
  (esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rxGalapagosBridge_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op9_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, txStatus_V_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, txStatus_V_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op21_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sessionID_fifo_V_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, g2t_read_sid_V_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rxGalapagosBridge_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, g2t_write_sid_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state2.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, g2t_write_dest_V_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, g2t_read_dest_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op69_write_state2.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || (((esl_seteq<1,1,1>(ap_const_logic_0, txData_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op87_write_state3.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, txMetaData_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_6)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, txData_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_5)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, txMetaData_V_full_n.read()) && 
    esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_3)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, ip_fifo_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op108_write_state3.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())));
}

void galapagos_to_tcp_int::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, rxGalapagosBridge_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op9_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, txStatus_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, txStatus_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op21_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, sessionID_fifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, g2t_read_sid_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, rxGalapagosBridge_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void galapagos_to_tcp_int::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_logic_0, g2t_write_sid_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, g2t_write_dest_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, g2t_read_dest_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op69_write_state2.read())));
}

void galapagos_to_tcp_int::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = ((esl_seteq<1,1,1>(ap_const_logic_0, txData_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op87_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, txMetaData_V_full_n.read()) && 
  esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_6)) || (esl_seteq<1,1,1>(ap_const_logic_0, txData_V_full_n.read()) && 
  esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_5)) || (esl_seteq<1,1,1>(ap_const_logic_0, txMetaData_V_full_n.read()) && 
  esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, ip_fifo_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op108_write_state3.read())));
}

void galapagos_to_tcp_int::thread_ap_condition_214() {
    ap_condition_214 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void galapagos_to_tcp_int::thread_ap_condition_376() {
    ap_condition_376 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void galapagos_to_tcp_int::thread_ap_condition_403() {
    ap_condition_403 = (esl_seteq<1,4,4>(state_1.read(), ap_const_lv4_8) && esl_seteq<1,1,1>(grp_nbreadreq_fu_155_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_1_fu_314_p3.read()));
}

void galapagos_to_tcp_int::thread_ap_condition_520() {
    ap_condition_520 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && esl_seteq<1,4,4>(state_1.read(), ap_const_lv4_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_nbreadreq_fu_197_p3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0));
}

void galapagos_to_tcp_int::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void galapagos_to_tcp_int::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void galapagos_to_tcp_int::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = real_start.read();
}

void galapagos_to_tcp_int::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_ap_idle_pp0_0to1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0_0to1 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to1 = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_ap_phi_mux_storemerge2_i_phi_fu_289_p4() {
    if (esl_seteq<1,1,1>(ap_condition_520.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_380_p2.read())) {
            ap_phi_mux_storemerge2_i_phi_fu_289_p4 = ap_const_lv2_3;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_380_p2.read())) {
            ap_phi_mux_storemerge2_i_phi_fu_289_p4 = ap_const_lv2_2;
        } else {
            ap_phi_mux_storemerge2_i_phi_fu_289_p4 = ap_phi_reg_pp0_iter0_storemerge2_i_reg_286.read();
        }
    } else {
        ap_phi_mux_storemerge2_i_phi_fu_289_p4 = ap_phi_reg_pp0_iter0_storemerge2_i_reg_286.read();
    }
}

void galapagos_to_tcp_int::thread_ap_phi_reg_pp0_iter0_storemerge2_i_reg_286() {
    ap_phi_reg_pp0_iter0_storemerge2_i_reg_286 =  (sc_lv<2>) ("XX");
}

void galapagos_to_tcp_int::thread_ap_predicate_op108_write_state3() {
    ap_predicate_op108_write_state3 = (esl_seteq<1,4,4>(ap_const_lv4_1, state_1_load_reg_522_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_562_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_reg_571_pp0_iter1_reg.read()));
}

void galapagos_to_tcp_int::thread_ap_predicate_op14_read_state1() {
    ap_predicate_op14_read_state1 = (esl_seteq<1,4,4>(state_1.read(), ap_const_lv4_7) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbreadreq_fu_169_p3.read()));
}

void galapagos_to_tcp_int::thread_ap_predicate_op21_read_state1() {
    ap_predicate_op21_read_state1 = (esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbreadreq_fu_169_p3.read()) && esl_seteq<1,4,4>(state_1.read(), ap_const_lv4_4));
}

void galapagos_to_tcp_int::thread_ap_predicate_op28_read_state1() {
    ap_predicate_op28_read_state1 = (esl_seteq<1,4,4>(state_1.read(), ap_const_lv4_2) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_nbreadreq_fu_183_p3.read()));
}

void galapagos_to_tcp_int::thread_ap_predicate_op32_read_state1() {
    ap_predicate_op32_read_state1 = (esl_seteq<1,4,4>(state_1.read(), ap_const_lv4_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_nbreadreq_fu_197_p3.read()));
}

void galapagos_to_tcp_int::thread_ap_predicate_op43_read_state1() {
    ap_predicate_op43_read_state1 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_155_p3.read(), ap_const_lv1_1) && esl_seteq<1,4,4>(state_1.read(), ap_const_lv4_0));
}

void galapagos_to_tcp_int::thread_ap_predicate_op60_write_state2() {
    ap_predicate_op60_write_state2 = (esl_seteq<1,4,4>(ap_const_lv4_2, state_1_load_reg_522.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_reg_552.read()));
}

void galapagos_to_tcp_int::thread_ap_predicate_op69_write_state2() {
    ap_predicate_op69_write_state2 = (esl_seteq<1,4,4>(ap_const_lv4_0, state_1_load_reg_522.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_580.read()));
}

void galapagos_to_tcp_int::thread_ap_predicate_op87_write_state3() {
    ap_predicate_op87_write_state3 = (esl_seteq<1,4,4>(ap_const_lv4_8, state_1_load_reg_522_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_22_reg_531_pp0_iter1_reg.read()));
}

void galapagos_to_tcp_int::thread_ap_predicate_op9_read_state1() {
    ap_predicate_op9_read_state1 = (esl_seteq<1,4,4>(state_1.read(), ap_const_lv4_8) && esl_seteq<1,1,1>(grp_nbreadreq_fu_155_p3.read(), ap_const_lv1_1));
}

void galapagos_to_tcp_int::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void galapagos_to_tcp_int::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to1.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_g2t_read_dest_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op69_write_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        g2t_read_dest_V_V_blk_n = g2t_read_dest_V_V_full_n.read();
    } else {
        g2t_read_dest_V_V_blk_n = ap_const_logic_1;
    }
}

void galapagos_to_tcp_int::thread_g2t_read_dest_V_V_din() {
    g2t_read_dest_V_V_din = tmp_V_reg_595.read();
}

void galapagos_to_tcp_int::thread_g2t_read_dest_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op69_write_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        g2t_read_dest_V_V_write = ap_const_logic_1;
    } else {
        g2t_read_dest_V_V_write = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_g2t_read_sid_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state1.read()) && 
         !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        g2t_read_sid_V_V_blk_n = g2t_read_sid_V_V_empty_n.read();
    } else {
        g2t_read_sid_V_V_blk_n = ap_const_logic_1;
    }
}

void galapagos_to_tcp_int::thread_g2t_read_sid_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        g2t_read_sid_V_V_read = ap_const_logic_1;
    } else {
        g2t_read_sid_V_V_read = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_g2t_write_dest_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        g2t_write_dest_V_V_blk_n = g2t_write_dest_V_V_full_n.read();
    } else {
        g2t_write_dest_V_V_blk_n = ap_const_logic_1;
    }
}

void galapagos_to_tcp_int::thread_g2t_write_dest_V_V_din() {
    g2t_write_dest_V_V_din = tmp_V_15_reg_526.read();
}

void galapagos_to_tcp_int::thread_g2t_write_dest_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        g2t_write_dest_V_V_write = ap_const_logic_1;
    } else {
        g2t_write_dest_V_V_write = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_g2t_write_sid_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        g2t_write_sid_V_V_blk_n = g2t_write_sid_V_V_full_n.read();
    } else {
        g2t_write_sid_V_V_blk_n = ap_const_logic_1;
    }
}

void galapagos_to_tcp_int::thread_g2t_write_sid_V_V_din() {
    g2t_write_sid_V_V_din = tmp_V_14_reg_556.read();
}

void galapagos_to_tcp_int::thread_g2t_write_sid_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        g2t_write_sid_V_V_write = ap_const_logic_1;
    } else {
        g2t_write_sid_V_V_write = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_grp_fu_297_p3() {
    grp_fu_297_p3 = txStatus_V_V_dout.read().range(16, 16);
}

void galapagos_to_tcp_int::thread_grp_nbreadreq_fu_155_p3() {
    grp_nbreadreq_fu_155_p3 =  (sc_lv<1>) (rxGalapagosBridge_V_empty_n.read());
}

void galapagos_to_tcp_int::thread_grp_nbreadreq_fu_169_p3() {
    grp_nbreadreq_fu_169_p3 =  (sc_lv<1>) (txStatus_V_V_empty_n.read());
}

void galapagos_to_tcp_int::thread_header_out_V() {
    header_out_V = p_Val2_1_reg_584_pp0_iter1_reg.read();
}

void galapagos_to_tcp_int::thread_header_out_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,4,4>(ap_const_lv4_0, state_1_load_reg_522_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_580_pp0_iter1_reg.read()))) {
        header_out_V_ap_vld = ap_const_logic_1;
    } else {
        header_out_V_ap_vld = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_ip_fifo_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op108_write_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ip_fifo_V_V_blk_n = ip_fifo_V_V_full_n.read();
    } else {
        ip_fifo_V_V_blk_n = ap_const_logic_1;
    }
}

void galapagos_to_tcp_int::thread_ip_fifo_V_V_din() {
    ip_fifo_V_V_din = tmp_V_18_reg_607.read();
}

void galapagos_to_tcp_int::thread_ip_fifo_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op108_write_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ip_fifo_V_V_write = ap_const_logic_1;
    } else {
        ip_fifo_V_V_write = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_ip_table_V_address0() {
    ip_table_V_address0 =  (sc_lv<8>) (tmp_21_i_fu_386_p1.read());
}

void galapagos_to_tcp_int::thread_ip_table_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ip_table_V_ce0 = ap_const_logic_1;
    } else {
        ip_table_V_ce0 = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_p_Val2_1_fu_401_p1() {
    p_Val2_1_fu_401_p1 = rxGalapagosBridge_V_dout.read().range(64-1, 0);
}

void galapagos_to_tcp_int::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void galapagos_to_tcp_int::thread_rxGalapagosBridge_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_read_state1.read()) && 
          !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op9_read_state1.read()) && 
          !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        rxGalapagosBridge_V_blk_n = rxGalapagosBridge_V_empty_n.read();
    } else {
        rxGalapagosBridge_V_blk_n = ap_const_logic_1;
    }
}

void galapagos_to_tcp_int::thread_rxGalapagosBridge_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op9_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        rxGalapagosBridge_V_read = ap_const_logic_1;
    } else {
        rxGalapagosBridge_V_read = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_sessionID_fifo_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_read_state1.read()) && 
         !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        sessionID_fifo_V_V_blk_n = sessionID_fifo_V_V_empty_n.read();
    } else {
        sessionID_fifo_V_V_blk_n = ap_const_logic_1;
    }
}

void galapagos_to_tcp_int::thread_sessionID_fifo_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op28_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        sessionID_fifo_V_V_read = ap_const_logic_1;
    } else {
        sessionID_fifo_V_V_read = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_sessionID_out_V() {
    sessionID_out_V = txMetaDataWord_sessi_reg_600.read();
}

void galapagos_to_tcp_int::thread_sessionID_out_V_ap_vld() {
    if (((esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_6) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)))) {
        sessionID_out_V_ap_vld = ap_const_logic_1;
    } else {
        sessionID_out_V_ap_vld = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_size_V_1_fu_502_p2() {
    size_V_1_fu_502_p2 = (!ap_const_lv16_8.is_01() || !size_V_fu_498_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_8) + sc_biguint<16>(size_V_fu_498_p1.read()));
}

void galapagos_to_tcp_int::thread_size_V_3_fu_466_p1() {
    size_V_3_fu_466_p1 = header_data_V.read().range(16-1, 0);
}

void galapagos_to_tcp_int::thread_size_V_fu_498_p1() {
    size_V_fu_498_p1 = header_data_V.read().range(16-1, 0);
}

void galapagos_to_tcp_int::thread_size_out_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_3)) {
            size_out_V = size_V_1_fu_502_p2.read();
        } else if (esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_6)) {
            size_out_V = size_V_3_fu_466_p1.read();
        } else {
            size_out_V = "XXXXXXXXXXXXXXXX";
        }
    } else {
        size_out_V = "XXXXXXXXXXXXXXXX";
    }
}

void galapagos_to_tcp_int::thread_size_out_V_ap_vld() {
    if (((esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_6) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)))) {
        size_out_V_ap_vld = ap_const_logic_1;
    } else {
        size_out_V_ap_vld = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_start_out() {
    start_out = real_start.read();
}

void galapagos_to_tcp_int::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_state_1_load_load_fu_305_p1() {
    state_1_load_load_fu_305_p1 = state_1.read();
}

void galapagos_to_tcp_int::thread_state_out_V() {
    state_out_V = state_1.read();
}

void galapagos_to_tcp_int::thread_state_out_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        state_out_V_ap_vld = ap_const_logic_1;
    } else {
        state_out_V_ap_vld = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_storemerge1_cast_i_c_fu_354_p3() {
    storemerge1_cast_i_c_fu_354_p3 = (!grp_fu_297_p3.read()[0].is_01())? sc_lv<4>(): ((grp_fu_297_p3.read()[0].to_bool())? ap_const_lv4_3: ap_const_lv4_5);
}

void galapagos_to_tcp_int::thread_storemerge2_cast_i_fu_391_p1() {
    storemerge2_cast_i_fu_391_p1 = esl_zext<4,2>(ap_phi_mux_storemerge2_i_phi_fu_289_p4.read());
}

void galapagos_to_tcp_int::thread_storemerge_i_fu_328_p3() {
    storemerge_i_fu_328_p3 = (!grp_fu_297_p3.read()[0].is_01())? sc_lv<4>(): ((grp_fu_297_p3.read()[0].to_bool())? ap_const_lv4_6: ap_const_lv4_8);
}

void galapagos_to_tcp_int::thread_tmp_16_nbreadreq_fu_197_p3() {
    tmp_16_nbreadreq_fu_197_p3 =  (sc_lv<1>) (g2t_read_sid_V_V_empty_n.read());
}

void galapagos_to_tcp_int::thread_tmp_17_nbreadreq_fu_183_p3() {
    tmp_17_nbreadreq_fu_183_p3 =  (sc_lv<1>) (sessionID_fifo_V_V_empty_n.read());
}

void galapagos_to_tcp_int::thread_tmp_1_fu_509_p3() {
    tmp_1_fu_509_p3 = esl_concat<16,16>(ap_const_lv16_8, txMetaDataWord_sessi_reg_600.read());
}

void galapagos_to_tcp_int::thread_tmp_21_i_fu_386_p1() {
    tmp_21_i_fu_386_p1 = esl_zext<64,8>(dest_V.read());
}

void galapagos_to_tcp_int::thread_tmp_2_fu_487_p4() {
    tmp_2_fu_487_p4 = esl_concat<9,64>(esl_concat<1,8>(header_last_V.read(), header_keep_V.read()), header_data_V.read());
}

void galapagos_to_tcp_int::thread_tmp_3_fu_471_p3() {
    tmp_3_fu_471_p3 = esl_concat<16,16>(size_V_3_fu_466_p1.read(), txMetaDataWord_sessi_reg_600.read());
}

void galapagos_to_tcp_int::thread_tmp_i_fu_380_p2() {
    tmp_i_fu_380_p2 = (!g2t_read_sid_V_V_dout.read().is_01() || !ap_const_lv16_3E8.is_01())? sc_lv<1>(): sc_lv<1>(g2t_read_sid_V_V_dout.read() == ap_const_lv16_3E8);
}

void galapagos_to_tcp_int::thread_tmp_last_V_1_fu_314_p3() {
    tmp_last_V_1_fu_314_p3 = rxGalapagosBridge_V_dout.read().range(72, 72);
}

void galapagos_to_tcp_int::thread_txData_V_blk_n() {
    if (((esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_5) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op87_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        txData_V_blk_n = txData_V_full_n.read();
    } else {
        txData_V_blk_n = ap_const_logic_1;
    }
}

void galapagos_to_tcp_int::thread_txData_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_5)) {
            txData_V_din = tmp_2_fu_487_p4.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op87_write_state3.read())) {
            txData_V_din = tmp_4_reg_535_pp0_iter1_reg.read();
        } else {
            txData_V_din =  (sc_lv<73>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        txData_V_din =  (sc_lv<73>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void galapagos_to_tcp_int::thread_txData_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op87_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_5) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        txData_V_write = ap_const_logic_1;
    } else {
        txData_V_write = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_txMetaData_V_blk_n() {
    if (((esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_6) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        txMetaData_V_blk_n = txMetaData_V_full_n.read();
    } else {
        txMetaData_V_blk_n = ap_const_logic_1;
    }
}

void galapagos_to_tcp_int::thread_txMetaData_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_3)) {
            txMetaData_V_din = tmp_1_fu_509_p3.read();
        } else if (esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_6)) {
            txMetaData_V_din = tmp_3_fu_471_p3.read();
        } else {
            txMetaData_V_din =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        txMetaData_V_din =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void galapagos_to_tcp_int::thread_txMetaData_V_write() {
    if (((esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_6) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,4,4>(state_1_load_reg_522_pp0_iter1_reg.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        txMetaData_V_write = ap_const_logic_1;
    } else {
        txMetaData_V_write = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_txStatus_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op21_read_state1.read()) && 
          !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read()) && 
          !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        txStatus_V_V_blk_n = txStatus_V_V_empty_n.read();
    } else {
        txStatus_V_V_blk_n = ap_const_logic_1;
    }
}

void galapagos_to_tcp_int::thread_txStatus_V_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op14_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op21_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        txStatus_V_V_read = ap_const_logic_1;
    } else {
        txStatus_V_V_read = ap_const_logic_0;
    }
}

void galapagos_to_tcp_int::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

}

